{
  "version": 3,
  "sources": ["../SparqlEndpoint.ts", "../Queries.ts", "../UnifyAuthorities.ts", "../SynonymGroup.ts", "https://jsr.io/@std/collections/1.0.9/distinct.ts", "index.ts"],
  "sourcesContent": ["async function sleep(ms: number): Promise<void> {\n  const p = new Promise<void>((resolve) => {\n    setTimeout(resolve, ms);\n  });\n  return await p;\n}\n\n/** Describes the format of the JSON return by SPARQL endpoints */\nexport type SparqlJson = {\n  head: {\n    vars: string[];\n  };\n  results: {\n    bindings: {\n      [key: string]:\n        | { type: string; value: string; \"xml:lang\"?: string }\n        | undefined;\n    }[];\n  };\n};\n\n/**\n * Represents a remote sparql endpoint and provides a uniform way to run queries.\n */\nexport class SparqlEndpoint {\n  /** Create a new SparqlEndpoint with the given URI */\n  constructor(private sparqlEnpointUri: string) {}\n\n  /** @ignore */\n  // reasons: string[] = [];\n\n  /**\n   * Run a query against the sparql endpoint\n   *\n   * It automatically retries up to 10 times on fetch errors, waiting 50ms on the first retry and doupling the wait each time.\n   * Retries are logged to the console (`console.warn`)\n   *\n   * @throws In case of non-ok response status codes or if fetch failed 10 times.\n   * @param query The sparql query to run against the endpoint\n   * @param fetchOptions Additional options for the `fetch` request\n   * @param _reason (Currently ignored, used internally for debugging purposes)\n   * @returns Results of the query\n   */\n  async getSparqlResultSet(\n    query: string,\n    fetchOptions: RequestInit = {},\n    _reason = \"\",\n  ): Promise<SparqlJson> {\n    // this.reasons.push(_reason);\n    // DEBUG: console.info(`SPARQL ${_reason}:\\n${query}`);\n\n    fetchOptions.headers = fetchOptions.headers || {};\n    (fetchOptions.headers as Record<string, string>)[\"Accept\"] =\n      \"application/sparql-results+json\";\n    let retryCount = 0;\n    const sendRequest = async (): Promise<SparqlJson> => {\n      try {\n        // DEBUG: console.info(`SPARQL ${_reason} (${retryCount + 1})`);\n        const response = await fetch(\n          this.sparqlEnpointUri + \"?query=\" + encodeURIComponent(query),\n          fetchOptions,\n        );\n        if (!response.ok) {\n          throw new Error(\"Response not ok. Status \" + response.status);\n        }\n        return await response.json();\n      } catch (error) {\n        if (fetchOptions.signal?.aborted) {\n          throw error;\n        } else if (retryCount < 10) {\n          const wait = 50 * (1 << retryCount++);\n          console.info(`!! Fetch Error. Retrying in ${wait}ms (${retryCount})`);\n          await sleep(wait);\n          return await sendRequest();\n        }\n        console.warn(\"!! Fetch Error:\", query, \"\\n---\\n\", error);\n        throw error;\n      }\n    };\n    return await sendRequest();\n  }\n}\n", "/**\n * Common to all of the `getNameFrom_`-queries.\n *\n * As its own variable to ensure consistency in the resturned bindings.\n */\nconst preamble = `PREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dwc: <http://rs.tdwg.org/dwc/terms/>\nPREFIX dwcFP: <http://filteredpush.org/ontologies/oa/dwcFP#>\nPREFIX cito: <http://purl.org/spar/cito/>\nPREFIX trt: <http://plazi.org/vocab/treatment#>\nSELECT DISTINCT ?kingdom ?tn ?tc ?col ?rank ?genus ?subgenus ?species ?infrasp ?name ?authority\n  (group_concat(DISTINCT ?tcauth;separator=\" / \") AS ?tcAuth)\n  (group_concat(DISTINCT ?aug;separator=\"|\") as ?augs)\n  (group_concat(DISTINCT ?def;separator=\"|\") as ?defs)\n  (group_concat(DISTINCT ?dpr;separator=\"|\") as ?dprs)\n  (group_concat(DISTINCT ?cite;separator=\"|\") as ?cites)\n  (group_concat(DISTINCT ?trtn;separator=\"|\") as ?tntreats)\n  (group_concat(DISTINCT ?citetn;separator=\"|\") as ?tncites)`;\n\n/**\n * Common to all of the `getNameFrom_`-queries.\n *\n * As its own variable to ensure consistency in the resturned bindings.\n */\nconst postamble =\n  `GROUP BY ?kingdom ?tn ?tc ?col ?rank ?genus ?subgenus ?species ?infrasp ?name ?authority`;\n\n// For unclear reasons, the queries breaks if the limit is removed.\n\n/**\n * Note: this query assumes that there is no sub-species taxa with missing dwc:species\n *\n * Note: the handling assumes that at most one taxon-name matches this colTaxon\n */\nexport const getNameFromCol = (colUri: string) =>\n  `${preamble} WHERE {\nBIND(<${colUri}> as ?col)\n  ?col dwc:taxonRank ?rank .\n  ?col dwc:scientificName ?name .\n  ?col dwc:genericName ?genus .\n  OPTIONAL { ?col (dwc:parent|dwc:acceptedName)* ?p . ?p dwc:rank \"kingdom\" ; dwc:taxonName ?colkingdom . }\n  OPTIONAL { ?col dwc:infragenericEpithet ?colsubgenus . }\n  OPTIONAL {\n    ?col dwc:specificEpithet ?colspecies .\n    OPTIONAL { ?col dwc:infraspecificEpithet ?colinfrasp . }\n  }\n  OPTIONAL { ?col dwc:scientificNameAuthorship ?authority . }\n\n  BIND(COALESCE(?colkingdom, \"\") AS ?kingdom)\n  BIND(COALESCE(?colsubgenus, \"\") AS ?subgenus)\n  BIND(COALESCE(?colspecies, \"\") AS ?species)\n  BIND(COALESCE(?colinfrasp, \"\") AS ?infrasp)\n\n  OPTIONAL {\n    ?tn dwc:rank ?trank ;\n       a dwcFP:TaxonName .\n    FILTER(LCASE(?rank) = LCASE(?trank))\n    ?tn dwc:kingdom ?kingdom .\n    ?tn dwc:genus ?genus .\n\n    OPTIONAL { ?tn dwc:subGenus ?tnsubgenus . }\n    FILTER(?subgenus = COALESCE(?tnsubgenus, \"\"))\n    OPTIONAL { ?tn dwc:species ?tnspecies . }\n    FILTER(?species = COALESCE(?tnspecies, \"\"))\n    OPTIONAL { ?tn dwc:subSpecies|dwc:variety|dwc:form ?tninfrasp . }\n    FILTER(?infrasp = COALESCE(?tninfrasp, \"\"))\n\n    OPTIONAL {\n      ?trtnt trt:treatsTaxonName ?tn ; trt:publishedIn/dc:date ?trtndate .\n      BIND(CONCAT(STR(?trtnt), \">\", ?trtndate) AS ?trtn)\n    }\n    OPTIONAL {\n      ?citetnt trt:citesTaxonName ?tn ; trt:publishedIn/dc:date ?citetndate .\n      BIND(CONCAT(STR(?citetnt), \">\", ?citetndate) AS ?citetn)\n    }\n\n    OPTIONAL {\n      ?tc trt:hasTaxonName ?tn ; dwc:scientificNameAuthorship ?tcauth ; a dwcFP:TaxonConcept .\n\n      OPTIONAL {\n        ?augt trt:augmentsTaxonConcept ?tc ; trt:publishedIn/dc:date ?augdate .\n        BIND(CONCAT(STR(?augt), \">\", ?augdate) AS ?aug)\n      }\n      OPTIONAL {\n        ?deft trt:definesTaxonConcept ?tc ; trt:publishedIn/dc:date ?defdate .\n        BIND(CONCAT(STR(?deft), \">\", ?defdate) AS ?def)\n      }\n      OPTIONAL {\n        ?dprt trt:deprecates ?tc ; trt:publishedIn/dc:date ?dprdate .\n        BIND(CONCAT(STR(?dprt), \">\", ?dprdate) AS ?dpr)\n      }\n      OPTIONAL {\n        ?citet cito:cites ?tc ; trt:publishedIn/dc:date ?citedate .\n        BIND(CONCAT(STR(?citet), \">\", ?citedate) AS ?cite)\n      }\n    }\n  }\n}\n${postamble}\nLIMIT 500`;\n\n/**\n * Note: this query assumes that there is no sub-species taxa with missing dwc:species\n *\n * Note: the handling assumes that at most one taxon-name matches this colTaxon\n */\nexport const getNameFromTC = (tcUri: string) =>\n  `${preamble} WHERE {\n  <${tcUri}> trt:hasTaxonName ?tn .\n  ?tc trt:hasTaxonName ?tn ;\n      dwc:scientificNameAuthorship ?tcauth ;\n      a dwcFP:TaxonConcept .\n\n  ?tn a dwcFP:TaxonName .\n  ?tn dwc:rank ?tnrank .\n  ?tn dwc:kingdom ?kingdom .\n  ?tn dwc:genus ?genus .\n  OPTIONAL { ?tn dwc:subGenus ?tnsubgenus . }\n  OPTIONAL {\n    ?tn dwc:species ?tnspecies .\n    OPTIONAL { ?tn dwc:subSpecies|dwc:variety|dwc:form ?tninfrasp . }\n  }\n  \n  BIND(LCASE(?tnrank) AS ?rank)\n  BIND(COALESCE(?tnsubgenus, \"\") AS ?subgenus)\n  BIND(COALESCE(?tnspecies, \"\") AS ?species)\n  BIND(COALESCE(?tninfrasp, \"\") AS ?infrasp)\n  \n  OPTIONAL {\n    ?col dwc:taxonRank ?rank .\n    ?col dwc:scientificName ?name . # Note: contains authority\n    ?col dwc:genericName ?genus .\n    OPTIONAL { ?col (dwc:parent|dwc:acceptedName)* ?p . ?p dwc:rank \"kingdom\" ; dwc:taxonName ?colkingdom . }\n    FILTER(?kingdom = COALESCE(?colkingdom, \"\"))\n\n    OPTIONAL { ?col dwc:infragenericEpithet ?colsubgenus . }\n    FILTER(?subgenus = COALESCE(?colsubgenus, \"\"))\n    OPTIONAL { ?col dwc:specificEpithet ?colspecies . }\n    FILTER(?species = COALESCE(?colspecies, \"\"))\n    OPTIONAL { ?col dwc:infraspecificEpithet ?colinfrasp . }\n    FILTER(?infrasp = COALESCE(?colinfrasp, \"\"))\n    OPTIONAL { ?col dwc:scientificNameAuthorship ?authority . }\n  }\n\n  OPTIONAL {\n    ?trtnt trt:treatsTaxonName ?tn ; trt:publishedIn/dc:date ?trtndate .\n    BIND(CONCAT(STR(?trtnt), \">\", ?trtndate) AS ?trtn)\n  }\n  OPTIONAL {\n    ?citetnt trt:citesTaxonName ?tn ; trt:publishedIn/dc:date ?citetndate .\n    BIND(CONCAT(STR(?citetnt), \">\", ?citetndate) AS ?citetn)\n  }\n\n  OPTIONAL {\n    ?augt trt:augmentsTaxonConcept ?tc ; trt:publishedIn/dc:date ?augdate .\n    BIND(CONCAT(STR(?augt), \">\", ?augdate) AS ?aug)\n  }\n  OPTIONAL {\n    ?deft trt:definesTaxonConcept ?tc ; trt:publishedIn/dc:date ?defdate .\n    BIND(CONCAT(STR(?deft), \">\", ?defdate) AS ?def)\n  }\n  OPTIONAL {\n    ?dprt trt:deprecates ?tc ; trt:publishedIn/dc:date ?dprdate .\n    BIND(CONCAT(STR(?dprt), \">\", ?dprdate) AS ?dpr)\n  }\n  OPTIONAL {\n    ?citet cito:cites ?tc ; trt:publishedIn/dc:date ?citedate .\n    BIND(CONCAT(STR(?citet), \">\", ?citedate) AS ?cite)\n  }\n}\n${postamble}\nLIMIT 500`;\n\n/**\n * Note: this query assumes that there is no sub-species taxa with missing dwc:species\n *\n * Note: the handling assumes that at most one taxon-name matches this colTaxon\n */\nexport const getNameFromTN = (tnUri: string) =>\n  `${preamble} WHERE {\n  BIND(<${tnUri}> as ?tn)\n  ?tn a dwcFP:TaxonName .\n  ?tn dwc:rank ?tnrank .\n  ?tn dwc:genus ?genus .\n  ?tn dwc:kingdom ?kingdom .\n  OPTIONAL { ?tn dwc:subGenus ?tnsubgenus . }\n  OPTIONAL {\n    ?tn dwc:species ?tnspecies .\n    OPTIONAL { ?tn dwc:subSpecies|dwc:variety|dwc:form ?tninfrasp . }\n  }\n  \n  BIND(LCASE(?tnrank) AS ?rank)\n  BIND(COALESCE(?tnsubgenus, \"\") AS ?subgenus)\n  BIND(COALESCE(?tnspecies, \"\") AS ?species)\n  BIND(COALESCE(?tninfrasp, \"\") AS ?infrasp)\n  \n  OPTIONAL {\n    ?col dwc:taxonRank ?rank .\n    ?col dwc:scientificName ?name . # Note: contains authority\n    ?col dwc:genericName ?genus .\n    OPTIONAL { ?col (dwc:parent|dwc:acceptedName)* ?p . ?p dwc:rank \"kingdom\" ; dwc:taxonName ?colkingdom . }\n    FILTER(?kingdom = COALESCE(?colkingdom, \"\"))\n\n    OPTIONAL { ?col dwc:infragenericEpithet ?colsubgenus . }\n    FILTER(?subgenus = COALESCE(?colsubgenus, \"\"))\n    OPTIONAL { ?col dwc:specificEpithet ?colspecies . }\n    FILTER(?species = COALESCE(?colspecies, \"\"))\n    OPTIONAL { ?col dwc:infraspecificEpithet ?colinfrasp . }\n    FILTER(?infrasp = COALESCE(?colinfrasp, \"\"))\n    OPTIONAL { ?col dwc:scientificNameAuthorship ?authority . }\n  }\n\n  OPTIONAL {\n    ?trtnt trt:treatsTaxonName ?tn ; trt:publishedIn/dc:date ?trtndate .\n    BIND(CONCAT(STR(?trtnt), \">\", ?trtndate) AS ?trtn)\n  }\n  OPTIONAL {\n    ?citetnt trt:citesTaxonName ?tn ; trt:publishedIn/dc:date ?citetndate .\n    BIND(CONCAT(STR(?citetnt), \">\", ?citetndate) AS ?citetn)\n  }\n\n  OPTIONAL {\n    ?tc trt:hasTaxonName ?tn ; dwc:scientificNameAuthorship ?tcauth ; a dwcFP:TaxonConcept .\n\n    OPTIONAL {\n      ?augt trt:augmentsTaxonConcept ?tc ; trt:publishedIn/dc:date ?augdate .\n      BIND(CONCAT(STR(?augt), \">\", ?augdate) AS ?aug)\n    }\n    OPTIONAL {\n      ?deft trt:definesTaxonConcept ?tc ; trt:publishedIn/dc:date ?defdate .\n      BIND(CONCAT(STR(?deft), \">\", ?defdate) AS ?def)\n    }\n    OPTIONAL {\n      ?dprt trt:deprecates ?tc ; trt:publishedIn/dc:date ?dprdate .\n      BIND(CONCAT(STR(?dprt), \">\", ?dprdate) AS ?dpr)\n    }\n    OPTIONAL {\n      ?citet cito:cites ?tc ; trt:publishedIn/dc:date ?citedate .\n      BIND(CONCAT(STR(?citet), \">\", ?citedate) AS ?cite)\n    }\n  }\n}\n${postamble}\nLIMIT 500`;\n", "export function unifyAuthorithy(a: string, b: string): string | null {\n  const as = a.split(/\\s*[,]\\s*/);\n  const bs = b.split(/\\s*[,]\\s*/);\n  const yearA = (as.length > 0 && /\\d{4}/.test(as.at(-1)!)) ? as.pop()! : null;\n  const yearB = (bs.length > 0 && /\\d{4}/.test(bs.at(-1)!)) ? bs.pop()! : null;\n  const etalA = as.length > 0 && /\\s*et\\.?\\s*al\\.?/.test(as.at(-1)!);\n  const etalB = bs.length > 0 && /\\s*et\\.?\\s*al\\.?/.test(bs.at(-1)!);\n  if (etalA) {\n    as[as.length - 1] = as[as.length - 1].replace(/\\s*et\\.?\\s*al\\.?/, \"\");\n  }\n  if (etalB) {\n    bs[bs.length - 1] = bs[bs.length - 1].replace(/\\s*et\\.?\\s*al\\.?/, \"\");\n  }\n\n  if (!etalA && !etalB && as.length != bs.length) return null;\n\n  const result: string[] = [];\n  let i = 0;\n  for (; i < as.length && i < bs.length; i++) {\n    const r = unifySingleName(as[i], bs[i]);\n    if (r !== null) result.push(r);\n    else return null;\n  }\n  for (let j = i; j < as.length; j++) {\n    if (as[j]) result.push(as[j]);\n  }\n  for (let j = i; j < bs.length; j++) {\n    if (bs[j]) result.push(bs[j]);\n  }\n\n  if (yearA && yearB) {\n    if (yearA === yearB) result.push(yearA);\n    else return null;\n  } else if (yearA) {\n    result.push(yearA);\n  } else if (yearB) {\n    result.push(yearB);\n  }\n\n  return result.join(\", \");\n}\n\nfunction unifySingleName(a: string, b: string) {\n  let prefixA = a.replaceAll(\"-\", \" \");\n  let prefixB = b.replaceAll(\"-\", \" \");\n  if (prefixA.endsWith(\".\") || prefixB.endsWith(\".\")) {\n    // might be abbreviation\n    // normalize to get compatible string lengths\n    const longA = prefixA.normalize(\"NFKC\");\n    const longB = prefixB.normalize(\"NFKC\");\n    const indexA = longA.lastIndexOf(\".\");\n    const indexB = longB.lastIndexOf(\".\");\n    const index = indexA !== -1\n      ? (indexB !== -1 ? Math.min(indexA, indexB) : indexA)\n      : indexB;\n    prefixA = longA.substring(0, index);\n    prefixB = longB.substring(0, index);\n  }\n\n  if (isEquivalent(prefixA, prefixB)) {\n    // normalize such that accents are represented with combining characters\n    // so that the version with accents is longer\n    const normA = a.normalize(\"NFD\");\n    const normB = b.normalize(\"NFD\");\n    return normA.length >= normB.length ? a : b;\n  }\n  return null;\n}\n\nfunction isEquivalent(a: string, b: string): boolean {\n  return a.localeCompare(b, \"en\", {\n    sensitivity: \"base\", // a = \u00E4, A = a, a \u2260 b\n    usage: \"search\",\n  }) === 0;\n}\n", "import type { SparqlEndpoint, SparqlJson } from \"./mod.ts\";\nimport * as Queries from \"./Queries.ts\";\nimport { unifyAuthorithy } from \"./UnifyAuthorities.ts\";\n\n/** Finds all synonyms of a taxon */\nexport class SynonymGroup implements AsyncIterable<Name> {\n  /** Indicates whether the SynonymGroup has found all synonyms.\n   *\n   * @readonly\n   */\n  isFinished = false;\n  /** Used internally to watch for new names found */\n  private monitor: EventTarget = new EventTarget();\n\n  /** Used internally to abort in-flight network requests when SynonymGroup is aborted */\n  private controller = new AbortController();\n\n  /** The SparqlEndpoint used */\n  private sparqlEndpoint: SparqlEndpoint;\n\n  /**\n   * List of names found so-far.\n   *\n   * Contains full list of synonyms _if_ .isFinished and not .isAborted\n   *\n   * @readonly\n   */\n  names: Name[] = [];\n  /**\n   * Add a new Name to this.names.\n   *\n   * Note: does not deduplicate on its own\n   *\n   * @internal */\n  private pushName(name: Name) {\n    this.names.push(name);\n    this.monitor.dispatchEvent(new CustomEvent(\"updated\"));\n  }\n\n  /**\n   * Call when all synonyms are found\n   *\n   * @internal */\n  private finish() {\n    this.isFinished = true;\n    this.monitor.dispatchEvent(new CustomEvent(\"updated\"));\n  }\n\n  /** contains TN, TC, CoL uris of synonyms which are in-flight somehow or are done already */\n  private expanded = new Set<string>(); // new Map<string, NameStatus>();\n\n  /** contains CoL uris where we don't need to check for Col \"acceptedName\" links\n   *\n   * col -> accepted col\n   */\n  private acceptedCol = new Map<string, string>();\n\n  /**\n   * Used internally to deduplicate treatments, maps from URI to Object.\n   *\n   * Contains full list of treatments _if_ .isFinished and not .isAborted\n   *\n   * @readonly\n   */\n  treatments: Map<string, Treatment> = new Map();\n\n  /**\n   * Whether to show taxa deprecated by CoL that would not have been found otherwise.\n   * This significantly increases the number of results in some cases.\n   */\n  ignoreDeprecatedCoL: boolean;\n\n  /**\n   * if set to true, subTaxa of the search term are also considered as starting points.\n   *\n   * Not that \"weird\" ranks like subGenus are always included when searching for a genus by latin name.\n   */\n  startWithSubTaxa: boolean;\n\n  /**\n   * Constructs a SynonymGroup\n   *\n   * @param sparqlEndpoint SPARQL-Endpoint to query\n   * @param taxonName either a string of the form \"Genus species infraspecific\" (species & infraspecific names optional), or an URI of a http://filteredpush.org/ontologies/oa/dwcFP#TaxonConcept or ...#TaxonName or a CoL taxon URI\n   * @param [ignoreDeprecatedCoL=true] Whether to show taxa deprecated by CoL that would not have been found otherwise\n   * @param [startWithSubTaxa=false] if set to true, subTaxa of the search term are also considered as starting points.\n   */\n  constructor(\n    sparqlEndpoint: SparqlEndpoint,\n    taxonName: string,\n    ignoreDeprecatedCoL = true,\n    startWithSubTaxa = false,\n  ) {\n    this.sparqlEndpoint = sparqlEndpoint;\n    this.ignoreDeprecatedCoL = ignoreDeprecatedCoL;\n    this.startWithSubTaxa = startWithSubTaxa;\n\n    if (taxonName.startsWith(\"http\")) {\n      this.getName(taxonName, { searchTerm: true, subTaxon: false })\n        .catch((e) => {\n          console.log(\"SynoGroup Failure: \", e);\n          this.controller.abort(\"SynoGroup Failed\");\n        })\n        .finally(() => this.finish());\n    } else {\n      const name = [\n        ...taxonName.split(\" \").filter((n) => !!n),\n        undefined,\n        undefined,\n      ] as [string, string | undefined, string | undefined];\n      this.getNameFromLatin(name, { searchTerm: true, subTaxon: false })\n        .finally(\n          () => this.finish(),\n        );\n    }\n  }\n\n  /**\n   * Finds the given name (identified by taxon-name, taxon-concept or CoL uri) among the list of synonyms.\n   *\n   * Will reject when the SynonymGroup finishes but the name was not found \u2014 this means that this was not a synonym.\n   */\n  findName(uri: string): Promise<Name | AuthorizedName> {\n    let name: Name | AuthorizedName | undefined;\n    for (const n of this.names) {\n      if (n.taxonNameURI === uri || n.colURI === uri) {\n        name = n;\n        break;\n      }\n      const an = n.authorizedNames.find((an) =>\n        an.colURI === uri || an.taxonConceptURIs.includes(uri)\n      );\n      if (an) {\n        name = an;\n        break;\n      }\n    }\n    if (name) return Promise.resolve(name);\n    return new Promise((resolve, reject) => {\n      this.monitor.addEventListener(\"updated\", () => {\n        if (this.names.length === 0 || this.isFinished) reject();\n        const n = this.names.at(-1)!;\n        if (n.taxonNameURI === uri || n.colURI === uri) {\n          resolve(n);\n          return;\n        }\n        const an = n.authorizedNames.find((an) =>\n          an.colURI === uri || an.taxonConceptURIs.includes(uri)\n        );\n        if (an) {\n          resolve(an);\n          return;\n        }\n      });\n    });\n  }\n\n  /** @internal */\n  private async getName(\n    taxonName: string,\n    justification: Justification,\n  ): Promise<void> {\n    if (this.expanded.has(taxonName)) {\n      console.log(\"Skipping known\", taxonName);\n      return;\n    }\n\n    if (this.controller.signal?.aborted) return Promise.reject();\n\n    let json: SparqlJson | undefined;\n\n    if (taxonName.startsWith(\"https://www.catalogueoflife.org\")) {\n      json = await this.sparqlEndpoint.getSparqlResultSet(\n        Queries.getNameFromCol(taxonName),\n        { signal: this.controller.signal },\n        `NameFromCol ${taxonName}`,\n      );\n    } else if (taxonName.startsWith(\"http://taxon-concept.plazi.org\")) {\n      json = await this.sparqlEndpoint.getSparqlResultSet(\n        Queries.getNameFromTC(taxonName),\n        { signal: this.controller.signal },\n        `NameFromTC ${taxonName}`,\n      );\n    } else if (taxonName.startsWith(\"http://taxon-name.plazi.org\")) {\n      json = await this.sparqlEndpoint.getSparqlResultSet(\n        Queries.getNameFromTN(taxonName),\n        { signal: this.controller.signal },\n        `NameFromTN ${taxonName}`,\n      );\n    } else {\n      throw `Cannot handle name-uri <${taxonName}> !`;\n    }\n\n    await this.handleName(json!, justification);\n\n    if (\n      this.startWithSubTaxa && justification.searchTerm &&\n      !justification.subTaxon\n    ) {\n      await this.getSubtaxa(taxonName);\n    }\n  }\n\n  /** @internal */\n  private async getSubtaxa(url: string): Promise<void> {\n    const query = url.startsWith(\"http://taxon-concept.plazi.org\")\n      ? `\nPREFIX trt: <http://plazi.org/vocab/treatment#>\nSELECT DISTINCT ?sub WHERE {\n  BIND(<${url}> as ?url)\n  ?sub trt:hasParentName*/^trt:hasTaxonName ?url .\n}\nLIMIT 5000`\n      : `\nPREFIX dwc: <http://rs.tdwg.org/dwc/terms/>\nPREFIX trt: <http://plazi.org/vocab/treatment#>\nSELECT DISTINCT ?sub WHERE {\n  BIND(<${url}> as ?url)\n  ?sub (dwc:parent|trt:hasParentName)* ?url .\n}\nLIMIT 5000`;\n\n    if (this.controller.signal?.aborted) return Promise.reject();\n    const json = await this.sparqlEndpoint.getSparqlResultSet(\n      query,\n      { signal: this.controller.signal },\n      `Subtaxa ${url}`,\n    );\n\n    const names = json.results.bindings\n      .map((n) => n.sub?.value)\n      .filter((n) => n && !this.expanded.has(n)) as string[];\n\n    await Promise.allSettled(\n      names.map((n) => this.getName(n, { searchTerm: true, subTaxon: true })),\n    );\n  }\n\n  /** @internal */\n  private async getNameFromLatin(\n    [genus, species, infrasp]: [string, string | undefined, string | undefined],\n    justification: Justification,\n  ): Promise<void> {\n    const query = `\n    PREFIX dwc: <http://rs.tdwg.org/dwc/terms/>\nSELECT DISTINCT ?uri WHERE {\n  ?uri dwc:genus|dwc:genericName \"${genus}\" .\n  ${\n      species\n        ? `?uri dwc:species|dwc:specificEpithet \"${species}\" .`\n        : \"FILTER NOT EXISTS { ?uri dwc:species|dwc:specificEpithet ?species . }\"\n    }\n  ${\n      infrasp\n        ? `?uri dwc:subSpecies|dwc:variety|dwc:form|dwc:infraspecificEpithet \"${infrasp}\" .`\n        : \"FILTER NOT EXISTS { ?uri dwc:subSpecies|dwc:variety|dwc:form|dwc:infraspecificEpithet ?infrasp . }\"\n    }\n}\nLIMIT 500`;\n\n    if (this.controller.signal?.aborted) return Promise.reject();\n    const json = await this.sparqlEndpoint.getSparqlResultSet(\n      query,\n      { signal: this.controller.signal },\n      `NameFromLatin ${genus} ${species} ${infrasp}`,\n    );\n\n    const names = json.results.bindings\n      .map((n) => n.uri?.value)\n      .filter((n) => n && !this.expanded.has(n)) as string[];\n\n    await Promise.allSettled(names.map((n) => this.getName(n, justification)));\n  }\n\n  /**\n   * Note this makes some assumptions on which variables are present in the bindings\n   *\n   * @internal */\n  private async handleName(\n    json: SparqlJson,\n    justification: Justification,\n  ): Promise<void> {\n    const treatmentPromises: Treatment[] = [];\n\n    const abbreviateRank = (rank: string) => {\n      switch (rank) {\n        case \"variety\":\n          return \"var.\";\n        case \"subspecies\":\n          return \"subsp.\";\n        case \"form\":\n          return \"f.\";\n        default:\n          return rank;\n      }\n    };\n\n    const displayName: string = (json.results.bindings[0].name\n      ? (\n        json.results.bindings[0].authority\n          ? json.results.bindings[0].name.value\n            .replace(\n              json.results.bindings[0].authority.value,\n              \"\",\n            )\n          : json.results.bindings[0].name.value\n      )\n      : json.results.bindings[0].genus!.value +\n        (json.results.bindings[0].subgenus?.value\n          ? ` (${json.results.bindings[0].subgenus.value})`\n          : \"\") +\n        (json.results.bindings[0].species?.value\n          ? ` ${json.results.bindings[0].species.value}`\n          : \"\") +\n        (json.results.bindings[0].infrasp?.value\n          ? ` ${abbreviateRank(json.results.bindings[0].rank!.value)} ${\n            json.results.bindings[0].infrasp.value\n          }`\n          : \"\")).trim();\n\n    // Case where the CoL-taxon has no authority. There should only be one of these.\n    let unathorizedCol: string | undefined;\n\n    // there can be multiple CoL-taxa with same latin name, e.g. Leontopodium alpinum has 3T6ZY and 3T6ZX.\n    const authorizedNames: AuthorizedName[] = [];\n\n    const taxonNameURI = json.results.bindings[0].tn?.value;\n    if (taxonNameURI) {\n      if (this.expanded.has(taxonNameURI)) return;\n      this.expanded.add(taxonNameURI); //, NameStatus.madeName);\n    }\n\n    const expandedHere = new Set<string>();\n\n    for (const t of json.results.bindings) {\n      if (t.col) {\n        const colURI = t.col.value;\n        if (!t.authority?.value) {\n          if (this.expanded.has(colURI)) {\n            console.log(\"Skipping known\", colURI);\n            return;\n          }\n          if (unathorizedCol && unathorizedCol !== colURI) {\n            console.log(\"Duplicate unathorized COL:\", unathorizedCol, colURI);\n          }\n          unathorizedCol = colURI;\n        } else if (!authorizedNames.find((e) => e.colURI === colURI)) {\n          if (this.expanded.has(colURI)) {\n            console.log(\"Skipping known\", colURI);\n            return;\n          }\n          if (!expandedHere.has(colURI)) {\n            expandedHere.add(colURI);\n            // TODO: handle unification of names\n            // might not be neccessary, assuming all CoL-taxa are non-unifiable and\n            // they are always handled first\n            authorizedNames.push({\n              displayName,\n              authority: t.authority!.value,\n              authorities: [t.authority!.value],\n              colURI: t.col.value,\n              taxonConceptURIs: [],\n              treatments: {\n                def: new Set(),\n                aug: new Set(),\n                dpr: new Set(),\n                cite: new Set(),\n              },\n            });\n          }\n        }\n      }\n\n      if (t.tc && t.tcAuth && t.tcAuth.value) {\n        if (this.expanded.has(t.tc.value)) {\n          console.log(\"Skipping known\", t.tc.value);\n          return;\n        } else if (!expandedHere.has(t.tc.value)) {\n          expandedHere.add(t.tc.value);\n\n          const def = this.makeTreatmentSet(t.defs?.value.split(\"|\"));\n          const aug = this.makeTreatmentSet(t.augs?.value.split(\"|\"));\n          const dpr = this.makeTreatmentSet(t.dprs?.value.split(\"|\"));\n          const cite = this.makeTreatmentSet(t.cites?.value.split(\"|\"));\n\n          def.forEach((t) => treatmentPromises.push(t));\n          aug.forEach((t) => treatmentPromises.push(t));\n          dpr.forEach((t) => treatmentPromises.push(t));\n\n          const prevName = authorizedNames.find((e) =>\n            unifyAuthorithy(e.authority, t.tcAuth!.value) !== null\n            // t.tcAuth!.value.split(\" / \").some((auth) =>\n            //   unifyAuthorithy(e.authority, auth) !== null\n            // )\n          );\n          if (prevName) {\n            // TODO: I feel like this could be made much more efficient -- we are unifying repeatedly\n            const best = t.tcAuth!.value; // .split(\" / \").find((auth) =>\n            //  unifyAuthorithy(prevName.authority, auth) !== null\n            // )!;\n\n            prevName.authority = unifyAuthorithy(prevName.authority, best)!;\n            prevName.authorities.push(...t.tcAuth.value.split(\" / \"));\n            prevName.taxonConceptURIs.push(t.tc.value);\n            prevName.treatments = {\n              def: prevName.treatments.def.union(def),\n              aug: prevName.treatments.aug.union(aug),\n              dpr: prevName.treatments.dpr.union(dpr),\n              cite: prevName.treatments.cite.union(cite),\n            };\n          } else {\n            authorizedNames.push({\n              displayName,\n              authority: t.tcAuth.value,\n              authorities: t.tcAuth.value.split(\" / \"),\n              taxonConceptURIs: [t.tc.value],\n              treatments: {\n                def,\n                aug,\n                dpr,\n                cite,\n              },\n            });\n          }\n        }\n      }\n    }\n\n    const treats = this.makeTreatmentSet(\n      json.results.bindings[0].tntreats?.value.split(\"|\"),\n    );\n    treats.forEach((t) => treatmentPromises.push(t));\n\n    const name: Name = {\n      kingdom: json.results.bindings[0].kingdom!.value,\n      displayName,\n      rank: json.results.bindings[0].rank!.value,\n      taxonNameURI,\n      authorizedNames: authorizedNames,\n      colURI: unathorizedCol,\n      justification,\n      treatments: {\n        treats,\n        cite: this.makeTreatmentSet(\n          json.results.bindings[0].tncites?.value.split(\"|\"),\n        ),\n      },\n      vernacularNames: taxonNameURI\n        ? this.getVernacular(taxonNameURI)\n        : Promise.resolve(new Map()),\n    };\n\n    for (const authName of name.authorizedNames) {\n      if (authName.colURI) this.expanded.add(authName.colURI);\n      for (const tc of authName.taxonConceptURIs) this.expanded.add(tc);\n    }\n\n    const colPromises: Promise<void>[] = [];\n\n    if (unathorizedCol) {\n      const [acceptedColURI, promises] = await this.getAcceptedCol(\n        unathorizedCol,\n        name,\n      );\n      name.acceptedColURI = acceptedColURI;\n      colPromises.push(...promises);\n    }\n\n    await Promise.all(\n      authorizedNames.map(async (n) => {\n        const [acceptedColURI, promises] = await this.getAcceptedCol(\n          n.colURI!,\n          name,\n        );\n        n.acceptedColURI = acceptedColURI;\n        colPromises.push(...promises);\n      }),\n    );\n\n    // TODO: make \"acceptedCol\" be a promise so we can move this above the this.getAcceptedCol-awaits, to show names sooner.\n    this.pushName(name);\n\n    /** Map<synonymUri, Treatment> */\n    const newSynonyms = new Map<string, Treatment>();\n    (await Promise.all(\n      treatmentPromises.map((treat) =>\n        treat.details.then((d): [Treatment, TreatmentDetails] => {\n          return [treat, d];\n        })\n      ),\n    )).map(([treat, d]) => {\n      d.treats.aug.difference(this.expanded).forEach((s) =>\n        newSynonyms.set(s, treat)\n      );\n      d.treats.def.difference(this.expanded).forEach((s) =>\n        newSynonyms.set(s, treat)\n      );\n      d.treats.dpr.difference(this.expanded).forEach((s) =>\n        newSynonyms.set(s, treat)\n      );\n      d.treats.treattn.difference(this.expanded).forEach((s) =>\n        newSynonyms.set(s, treat)\n      );\n    });\n\n    await Promise.allSettled(\n      [\n        ...colPromises,\n        ...[...newSynonyms].map(([n, treatment]) =>\n          this.getName(n, { searchTerm: false, parent: name, treatment })\n        ),\n      ],\n    );\n  }\n\n  /** @internal */\n  private async getAcceptedCol(\n    colUri: string,\n    parent: Name,\n  ): Promise<[string, Promise<void>[]]> {\n    const query = `\nPREFIX dwc: <http://rs.tdwg.org/dwc/terms/>\nSELECT DISTINCT ?current ?current_status (GROUP_CONCAT(DISTINCT ?dpr; separator=\"|\") AS ?dprs) WHERE {\n  BIND(<${colUri}> AS ?col)\n  {\n    ?col dwc:acceptedName ?current .\n    ?dpr dwc:acceptedName ?current .\n    OPTIONAL { ?current dwc:taxonomicStatus ?current_status . }\n  } UNION {\n    ?col dwc:taxonomicStatus ?current_status .\n    OPTIONAL { ?dpr dwc:acceptedName ?col . }\n    FILTER NOT EXISTS { ?col dwc:acceptedName ?_ . }\n    BIND(?col AS ?current)\n  }\n}\nGROUP BY ?current ?current_status`;\n\n    if (this.acceptedCol.has(colUri)) {\n      return [this.acceptedCol.get(colUri)!, []];\n    }\n\n    const json = await this.sparqlEndpoint.getSparqlResultSet(\n      query,\n      { signal: this.controller.signal },\n      `AcceptedCol ${colUri}`,\n    );\n\n    const promises: Promise<void>[] = [];\n\n    for (const b of json.results.bindings) {\n      for (const dpr of b.dprs!.value.split(\"|\")) {\n        if (dpr) {\n          if (!this.acceptedCol.has(b.current!.value)) {\n            this.acceptedCol.set(b.current!.value, b.current!.value);\n            promises.push(\n              this.getName(b.current!.value, {\n                searchTerm: false,\n                parent,\n              }),\n            );\n          }\n\n          this.acceptedCol.set(dpr, b.current!.value);\n          if (!this.ignoreDeprecatedCoL) {\n            promises.push(\n              this.getName(dpr, { searchTerm: false, parent }),\n            );\n          }\n        }\n      }\n    }\n\n    if (json.results.bindings.length === 0) {\n      // the provided colUri is not in CoL\n      // promises === []\n      if (!this.acceptedCol.has(colUri)) {\n        this.acceptedCol.set(colUri, \"INVALID COL\");\n      }\n      return [this.acceptedCol.get(colUri)!, promises];\n    }\n\n    if (!this.acceptedCol.has(colUri)) this.acceptedCol.set(colUri, colUri);\n    return [this.acceptedCol.get(colUri)!, promises];\n  }\n\n  /** @internal */\n  private async getVernacular(uri: string): Promise<vernacularNames> {\n    const result: vernacularNames = new Map();\n    const query =\n      `SELECT DISTINCT ?n WHERE { <${uri}> <http://rs.tdwg.org/dwc/terms/vernacularName> ?n . }`;\n    const bindings = (await this.sparqlEndpoint.getSparqlResultSet(query, {\n      signal: this.controller.signal,\n    }, `Vernacular ${uri}`)).results.bindings;\n    for (const b of bindings) {\n      if (b.n?.value) {\n        if (b.n[\"xml:lang\"]) {\n          if (result.has(b.n[\"xml:lang\"])) {\n            result.get(b.n[\"xml:lang\"])!.push(b.n.value);\n          } else result.set(b.n[\"xml:lang\"], [b.n.value]);\n        } else {\n          if (result.has(\"??\")) result.get(\"??\")!.push(b.n.value);\n          else result.set(\"??\", [b.n.value]);\n        }\n      }\n    }\n    return result;\n  }\n\n  /** @internal\n   *\n   * the supplied \"urls\" must be of the form \"URL>DATE\"\n   */\n  private makeTreatmentSet(urls?: string[]): Set<Treatment> {\n    if (!urls) return new Set<Treatment>();\n    return new Set<Treatment>(\n      urls.filter((url) => !!url).map((url_d) => {\n        const [url, date] = url_d.split(\">\");\n        if (!this.treatments.has(url)) {\n          const details = this.getTreatmentDetails(url);\n          this.treatments.set(url, {\n            url,\n            date: date ? parseInt(date, 10) : undefined,\n            details,\n          });\n        }\n        return this.treatments.get(url) as Treatment;\n      }),\n    );\n  }\n\n  /** @internal */\n  private async getTreatmentDetails(\n    treatmentUri: string,\n  ): Promise<TreatmentDetails> {\n    const query = `\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dwc: <http://rs.tdwg.org/dwc/terms/>\nPREFIX dwcFP: <http://filteredpush.org/ontologies/oa/dwcFP#>\nPREFIX cito: <http://purl.org/spar/cito/>\nPREFIX trt: <http://plazi.org/vocab/treatment#>\nSELECT DISTINCT\n  ?date ?title ?mc\n  (group_concat(DISTINCT ?catalogNumber;separator=\" / \") as ?catalogNumbers)\n  (group_concat(DISTINCT ?collectionCode;separator=\" / \") as ?collectionCodes)\n  (group_concat(DISTINCT ?typeStatus;separator=\" / \") as ?typeStatuss)\n  (group_concat(DISTINCT ?countryCode;separator=\" / \") as ?countryCodes)\n  (group_concat(DISTINCT ?stateProvince;separator=\" / \") as ?stateProvinces)\n  (group_concat(DISTINCT ?municipality;separator=\" / \") as ?municipalitys)\n  (group_concat(DISTINCT ?county;separator=\" / \") as ?countys)\n  (group_concat(DISTINCT ?locality;separator=\" / \") as ?localitys)\n  (group_concat(DISTINCT ?verbatimLocality;separator=\" / \") as ?verbatimLocalitys)\n  (group_concat(DISTINCT ?recordedBy;separator=\" / \") as ?recordedBys)\n  (group_concat(DISTINCT ?eventDate;separator=\" / \") as ?eventDates)\n  (group_concat(DISTINCT ?samplingProtocol;separator=\" / \") as ?samplingProtocols)\n  (group_concat(DISTINCT ?decimalLatitude;separator=\" / \") as ?decimalLatitudes)\n  (group_concat(DISTINCT ?decimalLongitude;separator=\" / \") as ?decimalLongitudes)\n  (group_concat(DISTINCT ?verbatimElevation;separator=\" / \") as ?verbatimElevations)\n  (group_concat(DISTINCT ?gbifOccurrenceId;separator=\" / \") as ?gbifOccurrenceIds)\n  (group_concat(DISTINCT ?gbifSpecimenId;separator=\" / \") as ?gbifSpecimenIds)\n  (group_concat(DISTINCT ?creator;separator=\"; \") as ?creators)\n  (group_concat(DISTINCT ?httpUri;separator=\"|\") as ?httpUris)\n  (group_concat(DISTINCT ?aug;separator=\"|\") as ?augs)\n  (group_concat(DISTINCT ?def;separator=\"|\") as ?defs)\n  (group_concat(DISTINCT ?dpr;separator=\"|\") as ?dprs)\n  (group_concat(DISTINCT ?cite;separator=\"|\") as ?cites)\n  (group_concat(DISTINCT ?trttn;separator=\"|\") as ?trttns)\n  (group_concat(DISTINCT ?citetn;separator=\"|\") as ?citetns)\nWHERE {\n  BIND (<${treatmentUri}> as ?treatment)\n  ?treatment dc:creator ?creator .\n  OPTIONAL { ?treatment dc:title ?title }\n  OPTIONAL { ?treatment trt:augmentsTaxonConcept ?aug . }\n  OPTIONAL { ?treatment trt:definesTaxonConcept ?def . }\n  OPTIONAL { ?treatment trt:deprecates ?dpr . }\n  OPTIONAL { ?treatment cito:cites ?cite . ?cite a dwcFP:TaxonConcept . }\n  OPTIONAL { ?treatment trt:treatsTaxonName ?trttn . }\n  OPTIONAL { ?treatment trt:citesTaxonName ?citetn . }\n  OPTIONAL {\n    ?treatment dwc:basisOfRecord ?mc .\n    ?mc dwc:catalogNumber ?catalogNumber .\n    OPTIONAL { ?mc dwc:collectionCode ?collectionCode . }\n    OPTIONAL { ?mc dwc:typeStatus ?typeStatus . }\n    OPTIONAL { ?mc dwc:countryCode ?countryCode . }\n    OPTIONAL { ?mc dwc:stateProvince ?stateProvince . }\n    OPTIONAL { ?mc dwc:municipality ?municipality . }\n    OPTIONAL { ?mc dwc:county ?county . }\n    OPTIONAL { ?mc dwc:locality ?locality . }\n    OPTIONAL { ?mc dwc:verbatimLocality ?verbatimLocality . }\n    OPTIONAL { ?mc dwc:recordedBy ?recordedBy . }\n    OPTIONAL { ?mc dwc:eventDate ?eventDate . }\n    OPTIONAL { ?mc dwc:samplingProtocol ?samplingProtocol . }\n    OPTIONAL { ?mc dwc:decimalLatitude ?decimalLatitude . }\n    OPTIONAL { ?mc dwc:decimalLongitude ?decimalLongitude . }\n    OPTIONAL { ?mc dwc:verbatimElevation ?verbatimElevation . }\n    OPTIONAL { ?mc trt:gbifOccurrenceId ?gbifOccurrenceId . }\n    OPTIONAL { ?mc trt:gbifSpecimenId ?gbifSpecimenId . }\n    OPTIONAL { ?mc trt:httpUri ?httpUri . }\n  }\n}\nGROUP BY ?date ?title ?mc`;\n    if (this.controller.signal.aborted) {\n      return {\n        materialCitations: [],\n        figureCitations: [],\n        treats: {\n          def: new Set(),\n          aug: new Set(),\n          dpr: new Set(),\n          citetc: new Set(),\n          treattn: new Set(),\n          citetn: new Set(),\n        },\n      };\n    }\n    try {\n      const json = await this.sparqlEndpoint.getSparqlResultSet(\n        query,\n        { signal: this.controller.signal },\n        `TreatmentDetails ${treatmentUri}`,\n      );\n      const materialCitations: MaterialCitation[] = json.results.bindings\n        .filter((t) => t.mc && t.catalogNumbers?.value)\n        .map((t) => {\n          const httpUri = t.httpUris?.value?.split(\"|\");\n          return {\n            \"catalogNumber\": t.catalogNumbers!.value,\n            \"collectionCode\": t.collectionCodes?.value || undefined,\n            \"typeStatus\": t.typeStatuss?.value || undefined,\n            \"countryCode\": t.countryCodes?.value || undefined,\n            \"stateProvince\": t.stateProvinces?.value || undefined,\n            \"municipality\": t.municipalitys?.value || undefined,\n            \"county\": t.countys?.value || undefined,\n            \"locality\": t.localitys?.value || undefined,\n            \"verbatimLocality\": t.verbatimLocalitys?.value || undefined,\n            \"recordedBy\": t.recordedBys?.value || undefined,\n            \"eventDate\": t.eventDates?.value || undefined,\n            \"samplingProtocol\": t.samplingProtocols?.value || undefined,\n            \"decimalLatitude\": t.decimalLatitudes?.value || undefined,\n            \"decimalLongitude\": t.decimalLongitudes?.value || undefined,\n            \"verbatimElevation\": t.verbatimElevations?.value || undefined,\n            \"gbifOccurrenceId\": t.gbifOccurrenceIds?.value || undefined,\n            \"gbifSpecimenId\": t.gbifSpecimenIds?.value || undefined,\n            httpUri: httpUri?.length ? httpUri : undefined,\n          };\n        });\n      const figureQuery = `\nPREFIX cito: <http://purl.org/spar/cito/>\nPREFIX fabio: <http://purl.org/spar/fabio/>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nSELECT DISTINCT ?url ?description WHERE {\n  <${treatmentUri}> cito:cites ?cites .\n  ?cites a fabio:Figure ;\n  fabio:hasRepresentation ?url .\n  OPTIONAL { ?cites dc:description ?description . }\n} `;\n      const figures = (await this.sparqlEndpoint.getSparqlResultSet(\n        figureQuery,\n        { signal: this.controller.signal },\n        `TreatmentDetails/Figures ${treatmentUri}`,\n      )).results.bindings;\n      const figureCitations = figures.filter((f) => f.url?.value).map(\n        (f) => {\n          return { url: f.url!.value, description: f.description?.value };\n        },\n      );\n      return {\n        creators: json.results.bindings[0]?.creators?.value,\n        title: json.results.bindings[0]?.title?.value,\n        materialCitations,\n        figureCitations,\n        treats: {\n          def: new Set(\n            json.results.bindings[0]?.defs?.value\n              ? json.results.bindings[0].defs.value.split(\"|\")\n              : undefined,\n          ),\n          aug: new Set(\n            json.results.bindings[0]?.augs?.value\n              ? json.results.bindings[0].augs.value.split(\"|\")\n              : undefined,\n          ),\n          dpr: new Set(\n            json.results.bindings[0]?.dprs?.value\n              ? json.results.bindings[0].dprs.value.split(\"|\")\n              : undefined,\n          ),\n          citetc: new Set(\n            json.results.bindings[0]?.cites?.value\n              ? json.results.bindings[0].cites.value.split(\"|\")\n              : undefined,\n          ),\n          treattn: new Set(\n            json.results.bindings[0]?.trttns?.value\n              ? json.results.bindings[0].trttns.value.split(\"|\")\n              : undefined,\n          ),\n          citetn: new Set(\n            json.results.bindings[0]?.citetns?.value\n              ? json.results.bindings[0].citetns.value.split(\"|\")\n              : undefined,\n          ),\n        },\n      };\n    } catch (error) {\n      console.warn(\"SPARQL Error: \" + error);\n      return {\n        materialCitations: [],\n        figureCitations: [],\n        treats: {\n          def: new Set(),\n          aug: new Set(),\n          dpr: new Set(),\n          citetc: new Set(),\n          treattn: new Set(),\n          citetn: new Set(),\n        },\n      };\n    }\n  }\n\n  /** Allows iterating over the synonyms while they are found */\n  [Symbol.asyncIterator](): AsyncIterator<Name> {\n    let returnedSoFar = 0;\n    return {\n      next: () =>\n        new Promise<IteratorResult<Name>>(\n          (resolve, reject) => {\n            const callback = () => {\n              if (this.controller.signal.aborted) {\n                reject(new Error(\"SynyonymGroup has been aborted\"));\n              } else if (returnedSoFar < this.names.length) {\n                resolve({ value: this.names[returnedSoFar++] });\n              } else if (this.isFinished) {\n                resolve({ done: true, value: true });\n              } else {\n                const listener = () => {\n                  this.monitor.removeEventListener(\"updated\", listener);\n                  callback();\n                };\n                this.monitor.addEventListener(\"updated\", listener);\n              }\n            };\n            callback();\n          },\n        ),\n    };\n  }\n}\n\n// TODO: CoL taxa without authority -- associate them with the Name directly\n// eg. 5KTTT is \"Quercus robur subsp. robur\" w/o authority\n\n/** The central object.\n *\n * Each `Name` exists because of a taxon-name, taxon-concept or col-taxon in the data.\n * Each `Name` is uniquely determined by its human-readable latin name (for taxa ranking below genus, this is a multi-part name \u2014 binomial or trinomial) and kingdom.\n */\nexport type Name = {\n  /** taxonomic kingdom\n   *\n   * may be empty for some CoL-taxa with missing ancestors */\n  kingdom: string;\n  /** Human-readable name */\n  displayName: string;\n  /** taxonomic rank */\n  rank: string;\n\n  /** vernacular names */\n  vernacularNames: Promise<vernacularNames>;\n\n  // /** Contains the family tree / upper taxons accorindg to CoL / treatmentbank.\n  //  * //TODO */\n  // trees: Promise<{\n  //   col?: Tree;\n  //   tb?: Tree;\n  // }>;\n\n  /** The URI of the respective `dwcFP:TaxonName` if it exists */\n  taxonNameURI?: string;\n\n  /**\n   * The URI of the respective CoL-taxon if it exists\n   *\n   * Not that this is only for CoL-taxa which do not have an authority.\n   */\n  colURI?: string;\n  /** The URI of the corresponding accepted CoL-taxon if it exists.\n   *\n   * Always present if colURI is present, they are the same if it is the accepted CoL-Taxon.\n   *\n   * May be the string \"INVALID COL\" if the colURI is not valid.\n   */\n  acceptedColURI?: string;\n\n  /** All `AuthorizedName`s with this name */\n  authorizedNames: AuthorizedName[];\n\n  /** How this name was found */\n  justification: Justification;\n\n  /** treatments directly associated with .taxonNameUri */\n  treatments: {\n    treats: Set<Treatment>;\n    cite: Set<Treatment>;\n  };\n};\n\n/**\n * A map from language tags (IETF) to an array of vernacular names.\n */\nexport type vernacularNames = Map<string, string[]>;\n\n/** Why a given Name was found (ther migth be other possible justifications) */\nexport type Justification = {\n  searchTerm: true;\n  /** indicates that this is a subTaxon of the parent */\n  subTaxon: boolean;\n} | {\n  searchTerm: false;\n  parent: Name;\n  /** if missing, indicates synonymy according to CoL or subTaxon */\n  treatment?: Treatment;\n};\n\n/**\n * Corresponds to a taxon-concept or a CoL-Taxon\n */\nexport type AuthorizedName = {\n  // TODO: neccesary?\n  /** this may not be neccesary, as `AuthorizedName`s should only appear within a `Name` */\n  // name: Name;\n  /** Human-readable name */\n  displayName: string;\n  /** Human-readable authority */\n  authority: string;\n  /**\n   * Human-readable authorities as given in the Data.\n   */\n  authorities: string[];\n\n  /** The URIs of the respective `dwcFP:TaxonConcept` if it exists */\n  taxonConceptURIs: string[];\n\n  /** The URI of the respective CoL-taxon if it exists */\n  colURI?: string;\n  /** The URI of the corresponding accepted CoL-taxon if it exists.\n   *\n   * Always present if colURI is present, they are the same if it is the accepted CoL-Taxon.\n   *\n   * May be the string \"INVALID COL\" if the colURI is not valid.\n   */\n  acceptedColURI?: string;\n\n  // TODO: sensible?\n  // /** these are CoL-taxa linked in the rdf, which differ lexically */\n  // seeAlsoCol: string[];\n\n  /** treatments directly associated with .taxonConceptURI */\n  treatments: {\n    def: Set<Treatment>;\n    aug: Set<Treatment>;\n    dpr: Set<Treatment>;\n    cite: Set<Treatment>;\n  };\n};\n\n/** A plazi-treatment */\nexport type Treatment = {\n  url: string;\n  date?: number;\n\n  /** Details are behind a promise becuase they are loaded with a separate query. */\n  details: Promise<TreatmentDetails>;\n};\n\n/** Details of a treatment */\nexport type TreatmentDetails = {\n  materialCitations: MaterialCitation[];\n  figureCitations: FigureCitation[];\n  creators?: string;\n  title?: string;\n  treats: {\n    def: Set<string>;\n    aug: Set<string>;\n    dpr: Set<string>;\n    citetc: Set<string>;\n    treattn: Set<string>;\n    citetn: Set<string>;\n  };\n};\n\n/** A cited material */\nexport type MaterialCitation = {\n  \"catalogNumber\": string;\n  \"collectionCode\"?: string;\n  \"typeStatus\"?: string;\n  \"countryCode\"?: string;\n  \"stateProvince\"?: string;\n  \"municipality\"?: string;\n  \"county\"?: string;\n  \"locality\"?: string;\n  \"verbatimLocality\"?: string;\n  \"recordedBy\"?: string;\n  \"eventDate\"?: string;\n  \"samplingProtocol\"?: string;\n  \"decimalLatitude\"?: string;\n  \"decimalLongitude\"?: string;\n  \"verbatimElevation\"?: string;\n  \"gbifOccurrenceId\"?: string;\n  \"gbifSpecimenId\"?: string;\n  \"httpUri\"?: string[];\n};\n\n/** A cited figure */\nexport type FigureCitation = {\n  url: string;\n  description?: string;\n};\n", "// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// This module is browser compatible.\n\n/**\n * Returns all distinct elements in the given array, preserving order by first\n * occurrence.\n *\n * @typeParam T The type of the elements in the input array.\n *\n * @param array The array to filter for distinct elements.\n *\n * @returns An array of distinct elements in the input array.\n *\n * @example Basic usage\n * ```ts\n * import { distinct } from \"@std/collections/distinct\";\n * import { assertEquals } from \"@std/assert\";\n *\n * const numbers = [3, 2, 5, 2, 5];\n * const distinctNumbers = distinct(numbers);\n *\n * assertEquals(distinctNumbers, [3, 2, 5]);\n * ```\n */\nexport function distinct<T>(array: Iterable<T>): T[] {\n  const set = new Set(array);\n\n  return Array.from(set);\n}\n", "/// <reference lib=\"dom\" />\nimport {\n  type AuthorizedName,\n  type Name,\n  SparqlEndpoint,\n  SynonymGroup,\n  type Treatment,\n} from \"../mod.ts\";\nimport { distinct } from \"jsr:@std/collections/distinct\";\n\nconst params = new URLSearchParams(document.location.search);\nconst HIDE_COL_ONLY_SYNONYMS = !params.has(\"show_col\");\nconst START_WITH_SUBTAXA = params.has(\"subtaxa\");\nconst SORT_TREATMENTS_BY_TYPE = params.has(\"sort_treatments_by_type\");\nconst ENDPOINT_URL = params.get(\"server\") ||\n  \"https://treatment.ld.plazi.org/sparql\";\nconst NAME = params.get(\"q\") ||\n  \"https://www.catalogueoflife.org/data/taxon/3WD9M\";\n\nconst root = document.getElementById(\"root\") as HTMLDivElement;\n\nenum SynoStatus {\n  Def = \"def\",\n  Aug = \"aug\",\n  Dpr = \"dpr\",\n  Cite = \"cite\",\n}\n\nconst icons = {\n  def:\n    `<svg class=\"green\" viewBox=\"0 -960 960 960\"><path fill=\"currentcolor\" d=\"M444-288h72v-156h156v-72H516v-156h-72v156H288v72h156v156Zm36.28 192Q401-96 331-126t-122.5-82.5Q156-261 126-330.96t-30-149.5Q96-560 126-629.5q30-69.5 82.5-122T330.96-834q69.96-30 149.5-30t149.04 30q69.5 30 122 82.5T834-629.28q30 69.73 30 149Q864-401 834-331t-82.5 122.5Q699-156 629.28-126q-69.73 30-149 30Z\"/></svg>`,\n  aug:\n    `<svg class=\"blue\" viewBox=\"0 -960 960 960\"><path fill=\"currentcolor\" d=\"M480.28-96Q401-96 331-126t-122.5-82.5Q156-261 126-330.96t-30-149.5Q96-560 126-629.5q30-69.5 82.5-122T330.96-834q69.96-30 149.5-30t149.04 30q69.5 30 122 82.5T834-629.28q30 69.73 30 149Q864-401 834-331t-82.5 122.5Q699-156 629.28-126q-69.73 30-149 30Z\"/></svg>`,\n  dpr:\n    `<svg class=\"red\" viewBox=\"0 -960 960 960\"><path fill=\"currentcolor\" d=\"m339-288 141-141 141 141 51-51-141-141 141-141-51-51-141 141-141-141-51 51 141 141-141 141 51 51ZM480-96q-79 0-149-30t-122.5-82.5Q156-261 126-331T96-480q0-80 30-149.5t82.5-122Q261-804 331-834t149-30q80 0 149.5 30t122 82.5Q804-699 834-629.5T864-480q0 79-30 149t-82.5 122.5Q699-156 629.5-126T480-96Z\"/></svg>`,\n  cite:\n    `<svg class=\"gray\" viewBox=\"0 -960 960 960\"><path fill=\"currentcolor\" d=\"M480.28-96Q401-96 331-126t-122.5-82.5Q156-261 126-330.96t-30-149.5Q96-560 126-629.5q30-69.5 82.5-122T330.96-834q69.96-30 149.5-30t149.04 30q69.5 30 122 82.5T834-629.28q30 69.73 30 149Q864-401 834-331t-82.5 122.5Q699-156 629.28-126q-69.73 30-149 30Zm-.28-72q130 0 221-91t91-221q0-130-91-221t-221-91q-130 0-221 91t-91 221q0 130 91 221t221 91Zm0-312Z\"/></svg>`,\n  unknown:\n    `<svg class=\"gray\" viewBox=\"0 -960 960 960\"><path fill=\"currentcolor\" d=\"M480-240q20 0 34-14t14-34q0-20-14-34t-34-14q-20 0-34 14t-14 34q0 20 14 34t34 14Zm-36-153h73q0-37 6.5-52.5T555-485q35-34 48.5-58t13.5-53q0-55-37.5-89.5T484-720q-51 0-88.5 27T343-620l65 27q9-28 28.5-43.5T482-652q28 0 46 16t18 42q0 23-15.5 41T496-518q-35 32-43.5 52.5T444-393Zm36 297q-79 0-149-30t-122.5-82.5Q156-261 126-331T96-480q0-80 30-149.5t82.5-122Q261-804 331-834t149-30q80 0 149.5 30t122 82.5Q804-699 834-629.5T864-480q0 79-30 149t-82.5 122.5Q699-156 629.5-126T480-96Zm0-72q130 0 221-91t91-221q0-130-91-221t-221-91q-130 0-221 91t-91 221q0 130 91 221t221 91Zm0-312Z\"/></svg>`,\n\n  col_aug:\n    `<svg class=\"blue\" viewBox=\"0 -960 960 960\"><path fill=\"currentcolor\" d=\"m429-336 238-237-51-51-187 186-85-84-51 51 136 135ZM216-144q-29.7 0-50.85-21.15Q144-186.3 144-216v-528q0-29.7 21.15-50.85Q186.3-816 216-816h528q29.7 0 50.85 21.15Q816-773.7 816-744v528q0 29.7-21.15 50.85Q773.7-144 744-144H216Z\"/></svg>`,\n  col_dpr:\n    `<svg class=\"red\" viewBox=\"0 -960 960 960\"><path fill=\"currentcolor\" d=\"m350-300 129.77-129.77L609.53-300 660-350.47 530.23-480.23 660-610l-50-50-129.77 129.77L350.47-660 300-609.53l129.77 129.76L300-350l50 50ZM216-144q-29.7 0-50.85-21.15Q144-186.3 144-216v-528q0-29.7 21.15-50.85Q186.3-816 216-816h528q29.7 0 50.85 21.15Q816-773.7 816-744v528q0 29.7-21.15 50.85Q773.7-144 744-144H216Z\"/></svg>`,\n\n  link:\n    `<svg class=\"gray\" viewBox=\"0 -960 960 960\"><path fill=\"currentColor\" d=\"M216-144q-29.7 0-50.85-21.15Q144-186.3 144-216v-528q0-29.7 21.15-50.85Q186.3-816 216-816h264v72H216v528h528v-264h72v264q0 29.7-21.15 50.85Q773.7-144 744-144H216Zm171-192-51-51 357-357H576v-72h240v240h-72v-117L387-336Z\"/></svg>`,\n\n  expand:\n    `<svg class=\"gray\" viewBox=\"0 -960 960 960\"><path fill=\"currentColor\" d=\"M240-240v-240h72v168h168v72H240Zm408-240v-168H480v-72h240v240h-72Z\"/></svg>`,\n  collapse:\n    `<svg class=\"gray\" viewBox=\"0 -960 960 960\"><path fill=\"currentColor\" d=\"M432-432v240h-72v-168H192v-72h240Zm168-336v168h168v72H528v-240h72Z\"/></svg>`,\n\n  east:\n    `<svg class=\"gray\" viewBox=\"0 -960 960 960\"><path fill=\"currentColor\" d=\"m600-216-51-51 177-177H96v-72h630L549-693l51-51 264 264-264 264Z\"/></svg>`,\n  west:\n    `<svg class=\"gray\" viewBox=\"0 -960 960 960\"><path fill=\"currentColor\" d=\"M360-216 96-480l264-264 51 51-177 177h630v72H234l177 177-51 51Z\"/></svg>`,\n  empty: `<svg viewBox=\"0 -960 960 960\"></svg>`,\n};\n\nconst indicator = document.createElement(\"div\");\nroot.insertAdjacentElement(\"beforebegin\", indicator);\nindicator.append(`Finding Synonyms for ${NAME} `);\nconst progress = document.createElement(\"progress\");\nindicator.append(progress);\n\nconst timeStart = performance.now();\n\nconst sparqlEndpoint = new SparqlEndpoint(ENDPOINT_URL);\nconst synoGroup = new SynonymGroup(\n  sparqlEndpoint,\n  NAME,\n  HIDE_COL_ONLY_SYNONYMS,\n  START_WITH_SUBTAXA,\n);\n\nclass SynoTreatment extends HTMLElement {\n  constructor(trt: Treatment, status: SynoStatus) {\n    super();\n\n    this.innerHTML = icons[status] ?? icons.unknown;\n\n    const button = document.createElement(\"button\");\n    button.classList.add(\"icon\", \"button\");\n    button.innerHTML = icons.expand;\n    button.addEventListener(\"click\", () => {\n      if (this.classList.toggle(\"expanded\")) {\n        button.innerHTML = icons.collapse;\n      } else {\n        button.innerHTML = icons.expand;\n      }\n    });\n\n    const date = document.createElement(\"span\");\n    if (trt.date) date.innerText = \"\" + trt.date;\n    else {\n      date.classList.add(\"missing\");\n      date.innerText = \"No Date\";\n    }\n    this.append(date);\n\n    const spinner = document.createElement(\"progress\");\n    this.append(\": \", spinner);\n\n    const url = document.createElement(\"a\");\n    url.classList.add(\"treatment\", \"uri\");\n    url.href = trt.url;\n    url.target = \"_blank\";\n    url.innerText = trt.url.replace(\"http://treatment.plazi.org/id/\", \"\");\n    url.innerHTML += icons.link;\n    this.append(\" \", url);\n\n    this.append(button);\n\n    const names = document.createElement(\"div\");\n    names.classList.add(\"indent\", \"details\");\n    this.append(names);\n\n    trt.details.then((details) => {\n      const creators = document.createElement(\"span\");\n      const title = document.createElement(\"i\");\n      spinner.replaceWith(creators, \" \", title);\n\n      if (details.creators) creators.innerText = details.creators;\n      else {\n        creators.classList.add(\"missing\");\n        creators.innerText = \"No Authors\";\n      }\n\n      if (details.title) title.innerText = \"\u201C\" + details.title + \"\u201D\";\n      else {\n        title.classList.add(\"missing\");\n        title.innerText = \"No Title\";\n      }\n\n      if (details.treats.def.size > 0) {\n        const line = document.createElement(\"div\");\n        // line.innerHTML = status === SynoStatus.Cite ? icons.line : icons.east;\n        line.innerHTML = icons.east;\n        line.innerHTML += icons.def;\n        if (status === SynoStatus.Def || status === SynoStatus.Cite) {\n          line.classList.add(\"hidden\");\n        }\n        names.append(line);\n\n        details.treats.def.forEach((n) => {\n          const url = document.createElement(\"a\");\n          url.classList.add(\"taxon\", \"uri\");\n          const short = n.replace(\"http://taxon-concept.plazi.org/id/\", \"\");\n          url.innerText = short;\n          url.href = \"#\" + short;\n          url.title = \"show name\";\n          line.append(\" \", url);\n          synoGroup.findName(n).then((nn) => {\n            url.classList.remove(\"uri\");\n            if ((nn as AuthorizedName).authority) {\n              url.innerText = nn.displayName + \" \" +\n                (nn as AuthorizedName).authority;\n            } else url.innerText = nn.displayName;\n          }, () => {\n            url.removeAttribute(\"href\");\n          });\n        });\n      }\n      if (details.treats.aug.size > 0 || details.treats.treattn.size > 0) {\n        const line = document.createElement(\"div\");\n        // line.innerHTML = status === SynoStatus.Cite ? icons.line : icons.east;\n        line.innerHTML = icons.east;\n        line.innerHTML += icons.aug;\n        if (status === SynoStatus.Aug || status === SynoStatus.Cite) {\n          line.classList.add(\"hidden\");\n        }\n        names.append(line);\n\n        details.treats.aug.forEach((n) => {\n          const url = document.createElement(\"a\");\n          url.classList.add(\"taxon\", \"uri\");\n          const short = n.replace(\"http://taxon-concept.plazi.org/id/\", \"\");\n          url.innerText = short;\n          url.href = \"#\" + short;\n          url.title = \"show name\";\n          line.append(\" \", url);\n          synoGroup.findName(n).then((nn) => {\n            url.classList.remove(\"uri\");\n            if ((nn as AuthorizedName).authority) {\n              url.innerText = nn.displayName + \" \" +\n                (nn as AuthorizedName).authority;\n            } else url.innerText = nn.displayName;\n          }, () => {\n            url.removeAttribute(\"href\");\n          });\n        });\n        details.treats.treattn.forEach((n) => {\n          const url = document.createElement(\"a\");\n          url.classList.add(\"taxon\", \"uri\");\n          const short = n.replace(\"http://taxon-name.plazi.org/id/\", \"\");\n          url.innerText = short;\n          url.href = \"#\" + short;\n          url.title = \"show name\";\n          line.append(\" \", url);\n          synoGroup.findName(n).then((nn) => {\n            url.classList.remove(\"uri\");\n            if ((nn as AuthorizedName).authority) {\n              url.innerText = nn.displayName + \" \" +\n                (nn as AuthorizedName).authority;\n            } else url.innerText = nn.displayName;\n          }, () => {\n            url.removeAttribute(\"href\");\n          });\n        });\n      }\n      if (details.treats.dpr.size > 0) {\n        const line = document.createElement(\"div\");\n        // line.innerHTML = status === SynoStatus.Cite ? icons.line : icons.west;\n        line.innerHTML = icons.west;\n        line.innerHTML += icons.dpr;\n        if (status === SynoStatus.Dpr || status === SynoStatus.Cite) {\n          line.classList.add(\"hidden\");\n        }\n        names.append(line);\n\n        details.treats.dpr.forEach((n) => {\n          const url = document.createElement(\"a\");\n          url.classList.add(\"taxon\", \"uri\");\n          const short = n.replace(\"http://taxon-concept.plazi.org/id/\", \"\");\n          url.innerText = short;\n          url.href = \"#\" + short;\n          url.title = \"show name\";\n          line.append(\" \", url);\n          synoGroup.findName(n).then((nn) => {\n            url.classList.remove(\"uri\");\n            if ((nn as AuthorizedName).authority) {\n              url.innerText = nn.displayName + \" \" +\n                (nn as AuthorizedName).authority;\n            } else url.innerText = nn.displayName;\n          }, () => {\n            url.removeAttribute(\"href\");\n          });\n        });\n      }\n      if (details.treats.citetc.size > 0 || details.treats.citetn.size > 0) {\n        const line = document.createElement(\"div\");\n        line.innerHTML = icons.empty + icons.cite;\n        // if (status === SynoStatus.Dpr || status === SynoStatus.Cite) {\n        line.classList.add(\"hidden\");\n        // }\n        names.append(line);\n\n        details.treats.citetc.forEach((n) => {\n          const url = document.createElement(\"a\");\n          url.classList.add(\"taxon\", \"uri\");\n          const short = n.replace(\"http://taxon-concept.plazi.org/id/\", \"\");\n          url.innerText = short;\n          url.href = \"#\" + short;\n          url.title = \"show name\";\n          line.append(\" \", url);\n          synoGroup.findName(n).then((nn) => {\n            url.classList.remove(\"uri\");\n            if ((nn as AuthorizedName).authority) {\n              url.innerText = nn.displayName + \" \" +\n                (nn as AuthorizedName).authority;\n            } else url.innerText = nn.displayName;\n          }, () => {\n            url.removeAttribute(\"href\");\n          });\n        });\n        details.treats.citetn.forEach((n) => {\n          const url = document.createElement(\"a\");\n          url.classList.add(\"taxon\", \"uri\");\n          const short = n.replace(\"http://taxon-name.plazi.org/id/\", \"\");\n          url.innerText = short;\n          url.href = \"#\" + short;\n          url.title = \"show name\";\n          line.append(\" \", url);\n          synoGroup.findName(n).then((nn) => {\n            url.classList.remove(\"uri\");\n            if ((nn as AuthorizedName).authority) {\n              url.innerText = nn.displayName + \" \" +\n                (nn as AuthorizedName).authority;\n            } else url.innerText = nn.displayName;\n          }, () => {\n            url.removeAttribute(\"href\");\n          });\n        });\n      }\n      if (details.figureCitations.length > 0) {\n        const line = document.createElement(\"div\");\n        line.classList.add(\"figures\", \"hidden\");\n        names.append(line);\n        for (const figure of details.figureCitations) {\n          const el = document.createElement(\"figure\");\n          line.append(el);\n          const img = document.createElement(\"img\");\n          img.src = figure.url;\n          img.loading = \"lazy\";\n          img.alt = figure.description ?? \"Cited Figure without caption\";\n          el.append(img);\n          const caption = document.createElement(\"figcaption\");\n          caption.innerText = figure.description ?? \"\";\n          el.append(caption);\n        }\n      }\n      if (details.materialCitations.length > 0) {\n        const line = document.createElement(\"div\");\n        line.innerHTML = icons.empty + icons.cite +\n          \" Material Citations:<br> -\";\n        line.classList.add(\"hidden\");\n        names.append(line);\n        line.innerText += details.materialCitations.map((c) =>\n          JSON.stringify(c)\n            .replaceAll(\"{\", \"\")\n            .replaceAll(\"}\", \"\")\n            .replaceAll('\":', \": \")\n            .replaceAll(\",\", \", \")\n            .replaceAll('\"', \"\")\n        ).join(\"\\n -\");\n      }\n    });\n  }\n}\ncustomElements.define(\"syno-treatment\", SynoTreatment);\n\nclass SynoName extends HTMLElement {\n  constructor(name: Name) {\n    super();\n\n    const title = document.createElement(\"h2\");\n    const name_title = document.createElement(\"i\");\n    name_title.innerText = name.displayName;\n    title.append(name_title);\n    this.append(title);\n\n    const rank_badge = document.createElement(\"span\");\n    rank_badge.classList.add(\"rank\");\n    rank_badge.innerText = name.rank;\n    const kingdom_badge = document.createElement(\"span\");\n    kingdom_badge.classList.add(\"rank\");\n    kingdom_badge.innerText = name.kingdom || \"Missing Kingdom\";\n    title.append(\" \", kingdom_badge, \" \", rank_badge);\n\n    if (name.taxonNameURI) {\n      const name_uri = document.createElement(\"a\");\n      name_uri.classList.add(\"taxon\", \"uri\");\n      const short = name.taxonNameURI.replace(\n        \"http://taxon-name.plazi.org/id/\",\n        \"\",\n      );\n      name_uri.innerText = short;\n      name_uri.id = short;\n      name_uri.href = name.taxonNameURI;\n      name_uri.target = \"_blank\";\n      name_uri.innerHTML += icons.link;\n      title.append(\" \", name_uri);\n    }\n\n    const vernacular = document.createElement(\"div\");\n    vernacular.classList.add(\"vernacular\");\n    name.vernacularNames.then((names) => {\n      if (names.size > 0) {\n        vernacular.innerText = \"\u201C\" +\n          distinct([...names.values()].flat()).join(\"\u201D, \u201C\") + \"\u201D\";\n      }\n    });\n    this.append(vernacular);\n\n    const treatments = document.createElement(\"ul\");\n    this.append(treatments);\n\n    if (name.colURI) {\n      const col_uri = document.createElement(\"a\");\n      col_uri.classList.add(\"col\", \"uri\");\n      const id = name.colURI.replace(\n        \"https://www.catalogueoflife.org/data/taxon/\",\n        \"\",\n      );\n      col_uri.innerText = id;\n      col_uri.id = id;\n      col_uri.href = name.colURI;\n      col_uri.target = \"_blank\";\n      col_uri.innerHTML += icons.link;\n      title.append(\" \", col_uri);\n\n      const li = document.createElement(\"div\");\n      li.classList.add(\"treatmentline\");\n      li.innerHTML = name.acceptedColURI !== name.colURI\n        ? icons.col_dpr\n        : icons.col_aug;\n      treatments.append(li);\n\n      const creators = document.createElement(\"span\");\n      creators.innerText = \"Catalogue of Life\";\n      li.append(creators);\n\n      const names = document.createElement(\"div\");\n      names.classList.add(\"indent\");\n      li.append(names);\n\n      if (name.acceptedColURI !== name.colURI) {\n        const line = document.createElement(\"div\");\n        line.innerHTML = icons.east + icons.col_aug;\n        names.append(line);\n\n        const col_uri = document.createElement(\"a\");\n        col_uri.classList.add(\"col\", \"uri\");\n        const id = name.acceptedColURI!.replace(\n          \"https://www.catalogueoflife.org/data/taxon/\",\n          \"\",\n        );\n        col_uri.innerText = id;\n        col_uri.href = `#${id}`;\n        col_uri.title = \"show name\";\n        line.append(col_uri);\n        synoGroup.findName(name.acceptedColURI!).then((n) => {\n          if ((n as AuthorizedName).authority) {\n            col_uri.innerText = n.displayName + \" \" +\n              (n as AuthorizedName).authority;\n          } else col_uri.innerText = n.displayName;\n        }, () => {\n          col_uri.removeAttribute(\"href\");\n        });\n      }\n    }\n    if (name.treatments.treats.size > 0 || name.treatments.cite.size > 0) {\n      for (const trt of name.treatments.treats) {\n        const li = new SynoTreatment(trt, SynoStatus.Aug);\n        treatments.append(li);\n      }\n      for (const trt of name.treatments.cite) {\n        const li = new SynoTreatment(trt, SynoStatus.Cite);\n        treatments.append(li);\n      }\n    }\n\n    const justification = document.createElement(\"abbr\");\n    justification.classList.add(\"justification\");\n    justification.innerText = \"...?\";\n    justify(name).then((just) => justification.title = `This ${just}`);\n    title.append(\" \", justification);\n\n    for (const authorizedName of name.authorizedNames) {\n      const authName = document.createElement(\"h3\");\n      const name_title = document.createElement(\"i\");\n      name_title.innerText = authorizedName.displayName;\n      name_title.classList.add(\"gray\");\n      authName.append(name_title);\n      authName.append(\" \", authorizedName.authority);\n      this.append(authName);\n\n      const treatments = document.createElement(\"ul\");\n      this.append(treatments);\n\n      if (authorizedName.taxonConceptURI) {\n        const name_uri = document.createElement(\"a\");\n        name_uri.classList.add(\"taxon\", \"uri\");\n        const short = authorizedName.taxonConceptURI.replace(\n          \"http://taxon-concept.plazi.org/id/\",\n          \"\",\n        );\n        name_uri.innerText = short;\n        name_uri.id = short;\n        name_uri.href = authorizedName.taxonConceptURI;\n        name_uri.target = \"_blank\";\n        name_uri.innerHTML += icons.link;\n        authName.append(\" \", name_uri);\n      }\n      if (authorizedName.colURI) {\n        const col_uri = document.createElement(\"a\");\n        col_uri.classList.add(\"col\", \"uri\");\n        const id = authorizedName.colURI.replace(\n          \"https://www.catalogueoflife.org/data/taxon/\",\n          \"\",\n        );\n        col_uri.innerText = id;\n        col_uri.id = id;\n        col_uri.href = authorizedName.colURI;\n        col_uri.target = \"_blank\";\n        col_uri.innerHTML += icons.link;\n        authName.append(\" \", col_uri);\n\n        const li = document.createElement(\"div\");\n        li.classList.add(\"treatmentline\");\n        li.innerHTML = authorizedName.acceptedColURI !== authorizedName.colURI\n          ? icons.col_dpr\n          : icons.col_aug;\n        treatments.append(li);\n\n        const creators = document.createElement(\"span\");\n        creators.innerText = \"Catalogue of Life\";\n        li.append(creators);\n\n        const names = document.createElement(\"div\");\n        names.classList.add(\"indent\");\n        li.append(names);\n\n        if (authorizedName.acceptedColURI !== authorizedName.colURI) {\n          const line = document.createElement(\"div\");\n          line.innerHTML = icons.east + icons.col_aug;\n          names.append(line);\n\n          const col_uri = document.createElement(\"a\");\n          col_uri.classList.add(\"col\", \"uri\");\n          const id = authorizedName.acceptedColURI!.replace(\n            \"https://www.catalogueoflife.org/data/taxon/\",\n            \"\",\n          );\n          col_uri.innerText = id;\n          col_uri.href = `#${id}`;\n          col_uri.title = \"show name\";\n          line.append(\" \", col_uri);\n          synoGroup.findName(authorizedName.acceptedColURI!).then((n) => {\n            col_uri.classList.remove(\"uri\");\n            if ((n as AuthorizedName).authority) {\n              col_uri.innerText = n.displayName + \" \" +\n                (n as AuthorizedName).authority;\n            } else col_uri.innerText = n.displayName;\n          }, () => {\n            col_uri.removeAttribute(\"href\");\n          });\n        }\n      }\n\n      const treatments_array: { trt: Treatment; status: SynoStatus }[] = [];\n\n      for (const trt of authorizedName.treatments.def) {\n        treatments_array.push({ trt, status: SynoStatus.Def });\n      }\n      for (const trt of authorizedName.treatments.aug) {\n        treatments_array.push({ trt, status: SynoStatus.Aug });\n      }\n      for (const trt of authorizedName.treatments.dpr) {\n        treatments_array.push({ trt, status: SynoStatus.Dpr });\n      }\n      for (const trt of authorizedName.treatments.cite) {\n        treatments_array.push({ trt, status: SynoStatus.Cite });\n      }\n\n      if (!SORT_TREATMENTS_BY_TYPE) {\n        treatments_array.sort((a, b) => {\n          if (a.trt.date && b.trt.date) return a.trt.date - b.trt.date;\n          if (a.trt.date) return 1;\n          if (b.trt.date) return -1;\n          return 0;\n        });\n      }\n\n      for (const { trt, status } of treatments_array) {\n        const li = new SynoTreatment(trt, status);\n        treatments.append(li);\n      }\n    }\n  }\n}\ncustomElements.define(\"syno-name\", SynoName);\n\nasync function justify(name: Name): Promise<string> {\n  if (name.justification.searchTerm) {\n    if (name.justification.subTaxon) {\n      return \"is a sub-taxon of the search term.\";\n    } else return \"is the search term.\";\n  } else if (name.justification.treatment) {\n    const details = await name.justification.treatment.details;\n    const parent = await justify(name.justification.parent);\n    return `is, according to ${details.creators} ${name.justification.treatment.date},\\n     a synonym of ${name.justification.parent.displayName} which ${parent}`;\n    // return `is, according to ${details.creators} ${details.date} \u201C${details.title||\"No Title\"}\u201D ${name.justification.treatment.url},\\n     a synonym of ${name.justification.parent.displayName} which ${parent}`;\n  } else {\n    const parent = await justify(name.justification.parent);\n    return `is, according to the Catalogue of Life,\\n     a synonym of ${name.justification.parent.displayName} which ${parent}`;\n  }\n}\n\nfor await (const name of synoGroup) {\n  const element = new SynoName(name);\n  root.append(element);\n}\n\nconst timeEnd = performance.now();\n\nindicator.innerHTML = \"\";\nindicator.innerText =\n  `Found ${synoGroup.names.length} names with ${synoGroup.treatments.size} treatments. This took ${\n    (timeEnd - timeStart) / 1000\n  } seconds.`;\nif (synoGroup.names.length === 0) root.append(\":[\");\n"],
  "mappings": "AAAA,eAAeA,EAAMC,EAA2B,CAI9C,OAAO,MAHG,IAAI,QAAeC,GAAY,CACvC,WAAWA,EAASD,CAAE,CACxB,CAAC,CAEH,CAmBO,IAAME,EAAN,KAAqB,CAE1B,YAAoBC,EAA0B,CAA1B,sBAAAA,CAA2B,CAiB/C,MAAM,mBACJC,EACAC,EAA4B,CAAC,EAC7BC,EAAU,GACW;AAIrBD,EAAa,QAAUA,EAAa,SAAW,CAAC,EAC/CA,EAAa,QAAmC,OAC/C,kCACF,IAAIE,EAAa,EACXC,EAAc,SAAiC,CACnD,GAAI,CAEF,IAAMC,EAAW,MAAM,MACrB;AAAK,iBAAmB,UAAY,mBAAmBL,CAAK,EAC5DC,CACF,EACA,GAAI,CAACI,EAAS,GACZ,MAAM,IAAI,MAAM,2BAA6BA,EAAS,MAAM,EAE9D,OAAO,MAAMA;AAAS,KAAK,CAC7B,OAASC,EAAO,CACd,GAAIL,EAAa,QAAQ,QACvB,MAAMK,EACD,GAAIH,EAAa,GAAI,CAC1B,IAAMI,EAAO,IAAM,GAAKJ,KACxB,eAAQ,KAAK;AAAA,GAA+BI,CAAI,OAAOJ,CAAU,GAAG,EACpE,MAAMR,EAAMY,CAAI,EACT,MAAMH,EAAY,CAC3B,CACA,cAAQ,KAAK,kBAAmBJ,EAAO;AAAA;AAAA,EAAWM,CAAK,EACjDA,CACR,CACF,EACA,OAAO,MAAMF,EAAY,CAC3B,CACF,EC5EA,IAAMI,EAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAmBXC,EACJ;AAAA,mCASWC,EAAkBC,GAC7B,GAAGH,CAAQ;AAAA,QACLG,CAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA8DZF,CAAS;AAAA,WAQEG,EAAiBC,GAC5B,GAAGL,CAAQ;AAAA,KACRK,CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA8DRJ,CAAS;AAAA,WAQEK,EAAiBC,GAC5B,GAAGP,CAAQ;AAAA,UACHO,CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA8DbN,CAAS;WClPJ,SAASO,EAAgBC,EAAWC,EAA0B,CACnE,IAAMC,EAAKF,EAAE,MAAM,WAAW,EACxBG,EAAKF,EAAE,MAAM,WAAW,EACxBG,EAASF,EAAG,OAAS,GAAK,QAAQ,KAAKA,EAAG,GAAG,EAAE,CAAE,EAAKA,EAAG,IAAI,EAAK,KAClEG,EAASF;AAAG,OAAS,GAAK,QAAQ,KAAKA,EAAG,GAAG,EAAE,CAAE,EAAKA,EAAG,IAAI,EAAK,KAClEG,EAAQJ,EAAG,OAAS,GAAK,mBAAmB,KAAKA,EAAG,GAAG,EAAE,CAAE,EAC3DK,EAAQJ,EAAG,OAAS,GAAK;AAAmB,KAAKA,EAAG,GAAG,EAAE,CAAE,EAQjE,GAPIG,IACFJ,EAAGA,EAAG,OAAS,CAAC,EAAIA,EAAGA,EAAG,OAAS,CAAC,EAAE,QAAQ,mBAAoB,EAAE,GAElEK,IACFJ,EAAGA,EAAG,OAAS,CAAC,EAAIA,EAAGA,EAAG,OAAS,CAAC,EAAE;AAAQ,mBAAoB,EAAE,GAGlE,CAACG,GAAS,CAACC,GAASL,EAAG,QAAUC,EAAG,OAAQ,OAAO,KAEvD,IAAMK,EAAmB,CAAC,EACtBC,EAAI,EACR,KAAOA,EAAIP,EAAG,QAAUO,EAAIN,EAAG,OAAQM,IAAK,CAC1C,IAAMC,EAAIC,EAAgBT,EAAGO,CAAC;AAAGN,EAAGM,CAAC,CAAC,EACtC,GAAIC,IAAM,KAAMF,EAAO,KAAKE,CAAC,MACxB,QAAO,IACd,CACA,QAASE,EAAIH,EAAGG,EAAIV,EAAG,OAAQU,IACzBV,EAAGU,CAAC,GAAGJ,EAAO,KAAKN,EAAGU,CAAC,CAAC,EAE9B,QAASA,EAAIH,EAAGG,EAAIT,EAAG,OAAQS,IACzBT,EAAGS,CAAC;AAAGJ,EAAO,KAAKL,EAAGS,CAAC,CAAC,EAG9B,GAAIR,GAASC,EACX,GAAID,IAAUC,EAAOG,EAAO,KAAKJ,CAAK,MACjC,QAAO,UACHA,EACTI,EAAO,KAAKJ,CAAK,EACRC,GACTG,EAAO,KAAKH,CAAK,EAGnB,OAAOG,EAAO,KAAK,IAAI,CACzB,CAEA,SAASG,EAAgBX,EAAWC,EAAW;AAC7C,IAAIY,EAAUb,EAAE,WAAW,IAAK,GAAG,EAC/Bc,EAAUb,EAAE,WAAW,IAAK,GAAG,EACnC,GAAIY,EAAQ,SAAS,GAAG,GAAKC,EAAQ,SAAS,GAAG,EAAG,CAGlD,IAAMC,EAAQF,EAAQ,UAAU,MAAM,EAChCG,EAAQF,EAAQ;AAAU,MAAM,EAChCG,EAASF,EAAM,YAAY,GAAG,EAC9BG,EAASF,EAAM,YAAY,GAAG,EAC9BG,EAAQF,IAAW,GACpBC,IAAW,GAAK,KAAK,IAAID,EAAQC,CAAM,EAAID,EAC5CC,EACJL,EAAUE,EAAM,UAAU,EAAGI,CAAK,EAClCL,EAAUE,EAAM,UAAU,EAAGG,CAAK,CACpC;AAEA,GAAIC,EAAaP,EAASC,CAAO,EAAG,CAGlC,IAAMO,EAAQrB,EAAE,UAAU,KAAK,EACzBsB,EAAQrB,EAAE,UAAU,KAAK,EAC/B,OAAOoB,EAAM,QAAUC,EAAM,OAAStB,EAAIC,CAC5C,CACA,OAAO,IACT,CAEA,SAASmB,EAAapB,EAAWC,EAAoB,CACnD,OAAOD;AAAE,cAAcC,EAAG,KAAM,CAC9B,YAAa,OACb,MAAO,QACT,CAAC,IAAM,CACT,CCrEO,IAAMsB,EAAN,KAAkD,CAKvD,WAAa,GAEL,QAAuB,IAAI,YAG3B,WAAa,IAAI,gBAGjB,eASR,MAAgB,CAAC,EAOT,SAASC,EAAY,CAC3B;AAAK,MAAM,KAAKA,CAAI,EACpB,KAAK,QAAQ,cAAc,IAAI,YAAY,SAAS,CAAC,CACvD,CAMQ,QAAS,CACf,KAAK,WAAa,GAClB,KAAK,QAAQ;AAAc,IAAI,YAAY,SAAS,CAAC,CACvD,CAGQ,SAAW,IAAI,IAMf,YAAc,IAAI,IAS1B,WAAqC,IAAI,IAMzC,oBAOA,iBAUA,YACEC,EACAC,EACAC,EAAsB,GACtBC,EAAmB,GACnB;AAKA,GAJA,KAAK,eAAiBH,EACtB,KAAK,oBAAsBE,EAC3B,KAAK,iBAAmBC,EAEpBF,EAAU,WAAW,MAAM,EAC7B,KAAK,QAAQA,EAAW,CAAE,WAAY;AAAM,SAAU,EAAM,CAAC,EAC1D,MAAOG,GAAM,CACZ,QAAQ,IAAI,sBAAuBA,CAAC,EACpC,KAAK,WAAW,MAAM,kBAAkB,CAC1C,CAAC,EACA,QAAQ,IAAM;AAAK,OAAO,CAAC,MACzB,CACL,IAAML,EAAO,CACX,GAAGE,EAAU,MAAM,GAAG,EAAE,OAAQI,GAAM,CAAC,CAACA,CAAC,EACzC,OACA,MACF,EACA,KAAK,iBAAiBN,EAAM,CAAE,WAAY,GAAM,SAAU,EAAM,CAAC;AAC9D,QACC,IAAM,KAAK,OAAO,CACpB,CACJ,CACF,CAOA,SAASO,EAA6C,CACpD,IAAIP,EACJ,QAAW,KAAK,KAAK,MAAO,CAC1B,GAAI,EAAE,eAAiBO,GAAO,EAAE,SAAWA,EAAK,CAC9CP,EAAO,EACP,KACF,CACA,IAAMQ,EAAK;AAAE,gBAAgB,KAAMA,GACjCA,EAAG,SAAWD,GAAOC,EAAG,iBAAiB,SAASD,CAAG,CACvD,EACA,GAAIC,EAAI,CACNR,EAAOQ,EACP,KACF,CACF,CACA,OAAIR,EAAa,QAAQ,QAAQA,CAAI,EAC9B,IAAI;AAAQ,CAACS,EAASC,IAAW,CACtC,KAAK,QAAQ,iBAAiB,UAAW,IAAM,EACzC,KAAK,MAAM,SAAW,GAAK,KAAK,aAAYA,EAAO,EACvD,IAAMJ,EAAI,KAAK,MAAM,GAAG,EAAE;AAC1B,GAAIA,EAAE,eAAiBC,GAAOD,EAAE,SAAWC,EAAK,CAC9CE,EAAQH,CAAC,EACT,MACF,CACA,IAAME,EAAKF,EAAE,gBAAgB,KAAME,GACjCA,EAAG,SAAWD,GAAOC,EAAG,iBAAiB;AAASD,CAAG,CACvD,EACA,GAAIC,EAAI,CACNC,EAAQD,CAAE,EACV,MACF,CACF,CAAC,CACH,CAAC,CACH,CAGA,MAAc,QACZN,EACAS,EACe,CACf,GAAI,KAAK,SAAS,IAAIT,CAAS,EAAG,CAChC,QAAQ,IAAI,iBAAkBA,CAAS,EACvC,MACF,CAEA,GAAI,KAAK;AAAW,QAAQ,QAAS,OAAO,QAAQ,OAAO,EAE3D,IAAIU,EAEJ,GAAIV,EAAU,WAAW,iCAAiC,EACxDU,EAAO,MAAM,KAAK;AAAe,mBACvBC,EAAeX,CAAS,EAChC,CAAE,OAAQ,KAAK,WAAW,MAAO,EACjC,eAAeA,CAAS,EAC1B,UACSA,EAAU,WAAW;AAAA,SAAgC,EAC9DU,EAAO,MAAM,KAAK,eAAe,mBACvBE,EAAcZ,CAAS,EAC/B,CAAE,OAAQ,KAAK,WAAW,MAAO,EACjC,cAAcA,CAAS,EACzB,UACSA;AAAU,WAAW,6BAA6B,EAC3DU,EAAO,MAAM,KAAK,eAAe,mBACvBG,EAAcb,CAAS,EAC/B,CAAE,OAAQ,KAAK,WAAW,MAAO;AACjC,cAAcA,CAAS,EACzB,MAEA,MAAM,2BAA2BA,CAAS,MAG5C,MAAM,KAAK,WAAWU,EAAOD,CAAa,EAGxC,KAAK,kBAAoBA,EAAc;AACvC,CAACA,EAAc,UAEf,MAAM,KAAK,WAAWT,CAAS,CAEnC,CAGA,MAAc,WAAWc,EAA4B,CACnD,IAAMC,EAAQD,EAAI,WAAW,gCAAgC,EACzD;AAAA;AAAA;AAAA,UAGEA,CAAG;AAAA;AAAA;AAAA,YAIL;AAAA;AAAA;AAAA;AAAA,UAIEA,CAAG;AAAA;AAAA;AAAA,YAKT,GAAI,KAAK,WAAW,QAAQ,QAAS,OAAO,QAAQ,OAAO,EAO3D,IAAME,GANO,MAAM,KAAK,eAAe;AACrCD,EACA,CAAE,OAAQ,KAAK,WAAW,MAAO,EACjC,WAAWD,CAAG,EAChB,GAEmB,QAAQ,SACxB,IAAKV,GAAMA,EAAE,KAAK,KAAK,EACvB,OAAQA,GAAMA,GAAK,CAAC,KAAK,SAAS;AAAIA,CAAC,CAAC,EAE3C,MAAM,QAAQ,WACZY,EAAM,IAAKZ,GAAM,KAAK,QAAQA,EAAG,CAAE,WAAY,GAAM,SAAU,EAAK,CAAC,CAAC,CACxE,CACF,CAGA,MAAc,iBACZ,CAACa,EAAOC,EAASC,CAAO,EACxBV,EACe,CACf,IAAMM,EAAQ;AAAA;AAAA;AAAA;AAAA,oCAGkBE,CAAK;AAAA,IAEnCC,EACI,yCAAyCA,CAAO,MAChD;AAAA,KACN;AAAA,IAEEC,EACI,sEAAsEA,CAAO,MAC7E;AAAA,+DACN;AAAA;AAAA,WAIA,GAAI,KAAK,WAAW,QAAQ,QAAS,OAAO,QAAQ,OAAO,EAO3D,IAAMH,GANO,MAAM,KAAK,eAAe;AACrCD,EACA,CAAE,OAAQ,KAAK,WAAW,MAAO,EACjC,iBAAiBE,CAAK,IAAIC,CAAO,IAAIC,CAAO,EAC9C,GAEmB,QAAQ,SACxB,IAAKf,GAAMA,EAAE,KAAK,KAAK,EACvB,OAAQA,GAAMA,GAAK,CAAC;AAAK,SAAS,IAAIA,CAAC,CAAC,EAE3C,MAAM,QAAQ,WAAWY,EAAM,IAAKZ,GAAM,KAAK,QAAQA,EAAGK,CAAa,CAAC,CAAC,CAC3E,CAMA,MAAc,WACZC,EACAD,EACe,CACf,IAAMW,EAAiC,CAAC,EAElCC,EAAkBC,GAAiB,CACvC,OAAQA,EAAM,CACZ,IAAK;AAAA,SACH,MAAO,OACT,IAAK,aACH,MAAO,SACT,IAAK,OACH,MAAO,KACT,QACE,OAAOA,CACX,CACF,EAEMC,GAAuBb,EAAK,QAAQ,SAAS,CAAC;AAAE,KAElDA,EAAK,QAAQ,SAAS,CAAC,EAAE,UACrBA,EAAK,QAAQ,SAAS,CAAC,EAAE,KAAK,MAC7B,QACCA,EAAK,QAAQ,SAAS,CAAC,EAAE,UAAU,MACnC,EACF;AACAA,EAAK,QAAQ,SAAS,CAAC,EAAE,KAAK,MAElCA,EAAK,QAAQ,SAAS,CAAC,EAAE,MAAO,OAC/BA,EAAK,QAAQ,SAAS,CAAC,EAAE,UAAU,MAChC,KAAKA,EAAK;AAAQ,SAAS,CAAC,EAAE,SAAS,KAAK,IAC5C,KACHA,EAAK,QAAQ,SAAS,CAAC,EAAE,SAAS,MAC/B,IAAIA,EAAK,QAAQ,SAAS,CAAC,EAAE,QAAQ,KAAK,GAC1C,KACHA;AAAK,QAAQ,SAAS,CAAC,EAAE,SAAS,MAC/B,IAAIW,EAAeX,EAAK,QAAQ,SAAS,CAAC,EAAE,KAAM,KAAK,CAAC,IACxDA,EAAK,QAAQ,SAAS,CAAC,EAAE,QAAQ,KACnC,GACE;AAAK,KAAK,EAGdc,EAGEC,EAAoC,CAAC,EAErCC,EAAehB,EAAK,QAAQ,SAAS,CAAC,EAAE,IAAI,MAClD,GAAIgB,EAAc,CAChB,GAAI,KAAK,SAAS,IAAIA,CAAY,EAAG,OACrC,KAAK,SAAS,IAAIA,CAAY,CAChC,CAEA,IAAMC,EAAe,IAAI;AAEzB,QAAWC,KAAKlB,EAAK,QAAQ,SAAU,CACrC,GAAIkB,EAAE,IAAK,CACT,IAAMC,EAASD,EAAE,IAAI,MACrB,GAAKA,EAAE,WAAW,OASX,GAAI,CAACH,EAAgB,KAAMtB,GAAMA,EAAE,SAAW0B,CAAM,EAAG,CAC5D,GAAI;AAAK,SAAS,IAAIA,CAAM,EAAG,CAC7B,QAAQ,IAAI,iBAAkBA,CAAM,EACpC,MACF,CACKF,EAAa,IAAIE,CAAM,IAC1BF,EAAa,IAAIE,CAAM,EAIvBJ,EAAgB,KAAK,CACnB,YAAAF,EACA,UAAWK,EAAE;AAAW,MACxB,YAAa,CAACA,EAAE,UAAW,KAAK,EAChC,OAAQA,EAAE,IAAI,MACd,iBAAkB,CAAC,EACnB,WAAY,CACV,IAAK,IAAI,IACT,IAAK,IAAI,IACT,IAAK,IAAI;AACT,KAAM,IAAI,GACZ,CACF,CAAC,EAEL,MAjCyB,CACvB,GAAI,KAAK,SAAS,IAAIC,CAAM,EAAG,CAC7B,QAAQ,IAAI,iBAAkBA,CAAM,EACpC,MACF,CACIL,GAAkBA,IAAmBK,GACvC,QAAQ,IAAI;AAAA,kBAA8BL,EAAgBK,CAAM,EAElEL,EAAiBK,CACnB,CAyBF,CAEA,GAAID,EAAE,IAAMA,EAAE,QAAUA,EAAE,OAAO,OAC/B,GAAI,KAAK,SAAS,IAAIA,EAAE,GAAG,KAAK,EAAG,CACjC,QAAQ,IAAI;AAAA,MAAkBA,EAAE,GAAG,KAAK,EACxC,MACF,SAAW,CAACD,EAAa,IAAIC,EAAE,GAAG,KAAK,EAAG,CACxCD,EAAa,IAAIC,EAAE,GAAG,KAAK,EAE3B,IAAME,EAAM,KAAK,iBAAiBF,EAAE,MAAM,MAAM,MAAM;AAAA,EAAG,CAAC,EACpDG,EAAM,KAAK,iBAAiBH,EAAE,MAAM,MAAM,MAAM,GAAG,CAAC,EACpDI,EAAM,KAAK,iBAAiBJ,EAAE,MAAM,MAAM,MAAM,GAAG,CAAC,EACpDK,EAAO,KAAK;AAAiBL,EAAE,OAAO,MAAM,MAAM,GAAG,CAAC,EAE5DE,EAAI,QAASF,GAAMR,EAAkB,KAAKQ,CAAC,CAAC,EAC5CG,EAAI,QAASH,GAAMR,EAAkB,KAAKQ,CAAC,CAAC,EAC5CI,EAAI,QAASJ,GAAMR,EAAkB,KAAKQ,CAAC,CAAC,EAE5C,IAAMM,EAAWT,EAAgB,KAAMtB,GACrCgC,EAAgBhC,EAAE;AAAWyB,EAAE,OAAQ,KAAK,IAAM,IAIpD,EACA,GAAIM,EAAU,CAEZ,IAAME,EAAOR,EAAE,OAAQ,MAIvBM,EAAS,UAAYC,EAAgBD,EAAS,UAAWE,CAAI,EAC7DF,EAAS,YAAY,KAAK,GAAGN,EAAE,OAAO,MAAM;AAAM,KAAK,CAAC,EACxDM,EAAS,iBAAiB,KAAKN,EAAE,GAAG,KAAK,EACzCM,EAAS,WAAa,CACpB,IAAKA,EAAS,WAAW,IAAI,MAAMJ,CAAG,EACtC,IAAKI,EAAS,WAAW,IAAI,MAAMH,CAAG,EACtC,IAAKG;AAAS,WAAW,IAAI,MAAMF,CAAG,EACtC,KAAME,EAAS,WAAW,KAAK,MAAMD,CAAI,CAC3C,CACF,MACER,EAAgB,KAAK,CACnB,YAAAF,EACA,UAAWK,EAAE,OAAO,MACpB,YAAaA;AAAE,OAAO,MAAM,MAAM,KAAK,EACvC,iBAAkB,CAACA,EAAE,GAAG,KAAK,EAC7B,WAAY,CACV,IAAAE,EACA,IAAAC,EACA,IAAAC,EACA,KAAAC,CACF,CACF,CAAC,CAEL,EAEJ,CAEA,IAAMI,EAAS,KAAK;AAClB3B,EAAK,QAAQ,SAAS,CAAC,EAAE,UAAU,MAAM,MAAM,GAAG,CACpD,EACA2B,EAAO,QAAST,GAAMR,EAAkB,KAAKQ,CAAC,CAAC,EAE/C,IAAM9B,EAAa,CACjB,QAASY,EAAK,QAAQ,SAAS,CAAC,EAAE,QAAS;AAC3C,YAAAa,EACA,KAAMb,EAAK,QAAQ,SAAS,CAAC,EAAE,KAAM,MACrC,aAAAgB,EACA,gBAAiBD,EACjB,OAAQD,EACR,cAAAf,EACA,WAAY;AACV,OAAA4B,EACA,KAAM,KAAK,iBACT3B,EAAK,QAAQ,SAAS,CAAC,EAAE,SAAS,MAAM,MAAM,GAAG,CACnD,CACF,EACA,gBAAiBgB,EACb,KAAK;AAAcA,CAAY,EAC/B,QAAQ,QAAQ,IAAI,GAAK,CAC/B,EAEA,QAAWY,KAAYxC,EAAK,gBAAiB,CACvCwC,EAAS,QAAQ,KAAK,SAAS,IAAIA,EAAS,MAAM,EACtD,QAAWC,KAAMD,EAAS;AAAkB,KAAK,SAAS,IAAIC,CAAE,CAClE,CAEA,IAAMC,EAA+B,CAAC,EAEtC,GAAIhB,EAAgB,CAClB,GAAM,CAACiB,EAAgBC,CAAQ,EAAI,MAAM,KAAK,eAC5ClB,EACA1B,CACF,EACAA,EAAK,eAAiB2C,EACtBD,EAAY,KAAK,GAAGE,CAAQ,CAC9B,CAEA,MAAM;AAAQ,IACZjB,EAAgB,IAAI,MAAOrB,GAAM,CAC/B,GAAM,CAACqC,EAAgBC,CAAQ,EAAI,MAAM,KAAK,eAC5CtC,EAAE,OACFN,CACF,EACAM,EAAE,eAAiBqC,EACnBD,EAAY,KAAK,GAAGE,CAAQ,CAC9B,CAAC,CACH,EAGA,KAAK,SAAS5C,CAAI,EAGlB,IAAM6C,EAAc,IAAI;AAAA,CACvB,MAAM,QAAQ,IACbvB,EAAkB,IAAKwB,GACrBA,EAAM,QAAQ,KAAMC,GACX,CAACD,EAAOC,CAAC,CACjB,CACH,CACF,GAAG,IAAI,CAAC,CAACD,EAAOC,CAAC,IAAM,CACrBA,EAAE,OAAO,IAAI,WAAW,KAAK,QAAQ,EAAE,QAASC,GAC9CH;AAAY,IAAIG,EAAGF,CAAK,CAC1B,EACAC,EAAE,OAAO,IAAI,WAAW,KAAK,QAAQ,EAAE,QAASC,GAC9CH,EAAY,IAAIG,EAAGF,CAAK,CAC1B,EACAC,EAAE,OAAO,IAAI,WAAW,KAAK,QAAQ,EAAE,QAASC,GAC9CH;AAAY,IAAIG,EAAGF,CAAK,CAC1B,EACAC,EAAE,OAAO,QAAQ,WAAW,KAAK,QAAQ,EAAE,QAASC,GAClDH,EAAY,IAAIG,EAAGF,CAAK,CAC1B,CACF,CAAC,EAED,MAAM,QAAQ,WACZ,CACE,GAAGJ,EACH,GAAG,CAAC,GAAGG,CAAW,EAAE;AAAI,CAAC,CAACvC,EAAG2C,CAAS,IACpC,KAAK,QAAQ3C,EAAG,CAAE,WAAY,GAAO,OAAQN,EAAM,UAAAiD,CAAU,CAAC,CAChE,CACF,CACF,CACF,CAGA,MAAc,eACZC,EACAC,EACoC,CACpC,IAAMlC,EAAQ;AAAA;AAAA;AAAA,UAGRiC,CAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAcZ,GAAI,KAAK,YAAY,IAAIA,CAAM,EAC7B,MAAO,CAAC,KAAK,YAAY,IAAIA,CAAM,EAAI,CAAC,CAAC,EAG3C,IAAMtC,EAAO,MAAM,KAAK;AAAe,mBACrCK,EACA,CAAE,OAAQ,KAAK,WAAW,MAAO,EACjC,eAAeiC,CAAM,EACvB,EAEMN,EAA4B,CAAC,EAEnC,QAAWQ,KAAKxC,EAAK,QAAQ,SAC3B,QAAWsB,KAAOkB;AAAE,KAAM,MAAM,MAAM,GAAG,EACnClB,IACG,KAAK,YAAY,IAAIkB,EAAE,QAAS,KAAK,IACxC,KAAK,YAAY,IAAIA,EAAE,QAAS,MAAOA,EAAE,QAAS,KAAK;AACvDR,EAAS,KACP,KAAK,QAAQQ,EAAE,QAAS,MAAO,CAC7B,WAAY,GACZ,OAAAD,CACF,CAAC,CACH,GAGF,KAAK,YAAY,IAAIjB,EAAKkB,EAAE,QAAS,KAAK,EACrC,KAAK;AACRR,EAAS,KACP,KAAK,QAAQV,EAAK,CAAE,WAAY,GAAO,OAAAiB,CAAO,CAAC,CACjD,GAMR,OAAIvC,EAAK,QAAQ,SAAS,SAAW,GAG9B,KAAK,YAAY,IAAIsC,CAAM,GAC9B,KAAK;AAAY,IAAIA,EAAQ,aAAa,EAErC,CAAC,KAAK,YAAY,IAAIA,CAAM,EAAIN,CAAQ,IAG5C,KAAK,YAAY,IAAIM,CAAM,GAAG,KAAK,YAAY,IAAIA,EAAQA,CAAM,EAC/D,CAAC,KAAK;AAAY,IAAIA,CAAM,EAAIN,CAAQ,EACjD,CAGA,MAAc,cAAcrC,EAAuC,CACjE,IAAM8C,EAA0B,IAAI,IAC9BpC,EACJ,+BAA+BV,CAAG;AAAA,mBAC9B+C,GAAY,MAAM,KAAK,eAAe,mBAAmBrC,EAAO,CACpE,OAAQ,KAAK,WAAW,MAC1B,EAAG,cAAcV,CAAG,EAAE;AAAG,QAAQ,SACjC,QAAW6C,KAAKE,EACVF,EAAE,GAAG,QACHA,EAAE,EAAE,UAAU,EACZC,EAAO,IAAID,EAAE,EAAE,UAAU,CAAC,EAC5BC,EAAO,IAAID,EAAE,EAAE,UAAU,CAAC,EAAG,KAAKA,EAAE,EAAE,KAAK;AACtCC,EAAO,IAAID,EAAE,EAAE,UAAU,EAAG,CAACA,EAAE,EAAE,KAAK,CAAC,EAE1CC,EAAO,IAAI,IAAI,EAAGA,EAAO,IAAI,IAAI,EAAG,KAAKD,EAAE,EAAE,KAAK,EACjDC,EAAO,IAAI,KAAM,CAACD,EAAE,EAAE,KAAK,CAAC,GAIvC,OAAOC,CACT,CAMQ,iBAAiBE,EAAiC;AACxD,OAAKA,EACE,IAAI,IACTA,EAAK,OAAQvC,GAAQ,CAAC,CAACA,CAAG,EAAE,IAAKwC,GAAU,CACzC,GAAM,CAACxC,EAAKyC,CAAI,EAAID,EAAM,MAAM,GAAG,EACnC,GAAI,CAAC,KAAK,WAAW,IAAIxC,CAAG,EAAG,CAC7B,IAAM0C,EAAU,KAAK;AAAoB1C,CAAG,EAC5C,KAAK,WAAW,IAAIA,EAAK,CACvB,IAAAA,EACA,KAAMyC,EAAO,SAASA,EAAM,EAAE,EAAI,OAClC,QAAAC,CACF,CAAC,CACH,CACA,OAAO,KAAK,WAAW,IAAI1C,CAAG,CAChC,CAAC,CACH,EAdkB,IAAI,GAexB,CAGA,MAAc,oBACZ2C,EAC2B;AAC3B,IAAM1C,EAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAkCP0C,CAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAgCnB,GAAI,KAAK,WAAW,OAAO,QACzB,MAAO,CACL,kBAAmB,CAAC,EACpB,gBAAiB,CAAC,EAClB,OAAQ,CACN,IAAK,IAAI;AACT,IAAK,IAAI,IACT,IAAK,IAAI,IACT,OAAQ,IAAI,IACZ,QAAS,IAAI,IACb,OAAQ,IAAI,GACd,CACF,EAEF,GAAI,CACF,IAAM/C,EAAO,MAAM,KAAK,eAAe;AACrCK,EACA,CAAE,OAAQ,KAAK,WAAW,MAAO,EACjC,oBAAoB0C,CAAY,EAClC,EACMC,EAAwChD,EAAK,QAAQ,SACxD,OAAQkB,GAAMA,EAAE,IAAMA,EAAE,gBAAgB,KAAK;AAC7C,IAAKA,GAAM,CACV,IAAM+B,EAAU/B,EAAE,UAAU,OAAO,MAAM,GAAG,EAC5C,MAAO,CACL,cAAiBA,EAAE,eAAgB,MACnC,eAAkBA,EAAE;AAAiB,OAAS,OAC9C,WAAcA,EAAE,aAAa,OAAS,OACtC,YAAeA,EAAE,cAAc,OAAS,OACxC,cAAiBA,EAAE;AAAgB,OAAS,OAC5C,aAAgBA,EAAE,eAAe,OAAS,OAC1C,OAAUA,EAAE,SAAS,OAAS,OAC9B,SAAYA,EAAE,WAAW,OAAS;AAClC,iBAAoBA,EAAE,mBAAmB,OAAS,OAClD,WAAcA,EAAE,aAAa,OAAS,OACtC,UAAaA,EAAE,YAAY;AAAS,OACpC,iBAAoBA,EAAE,mBAAmB,OAAS,OAClD,gBAAmBA,EAAE,kBAAkB,OAAS,OAChD,iBAAoBA;AAAE,mBAAmB,OAAS,OAClD,kBAAqBA,EAAE,oBAAoB,OAAS,OACpD,iBAAoBA,EAAE;AAAmB,OAAS,OAClD,eAAkBA,EAAE,iBAAiB,OAAS,OAC9C,QAAS+B,GAAS,OAASA,EAAU,MACvC,CACF,CAAC,EACGC,EAAc;AAAA;AAAA;AAAA;AAAA;AAAA,KAKrBH,CAAY;AAAA;AAAA;AAAA;AAAA,IAULI,GALW,MAAM,KAAK,eAAe,mBACzCD,EACA,CAAE,OAAQ,KAAK,WAAW,MAAO,EACjC,4BAA4BH,CAAY,EAC1C;AAAG,QAAQ,SACqB,OAAQK,GAAMA,EAAE,KAAK,KAAK,EAAE,IACzDA,IACQ,CAAE,IAAKA,EAAE,IAAK,MAAO,YAAaA,EAAE,aAAa,KAAM,EAElE,EACA,MAAO,CACL,SAAUpD;AAAK,QAAQ,SAAS,CAAC,GAAG,UAAU,MAC9C,MAAOA,EAAK,QAAQ,SAAS,CAAC,GAAG,OAAO,MACxC,kBAAAgD,EACA,gBAAAG,EACA,OAAQ;AACN,IAAK,IAAI,IACPnD,EAAK,QAAQ,SAAS,CAAC,GAAG,MAAM,MAC5BA,EAAK,QAAQ,SAAS,CAAC,EAAE,KAAK,MAAM,MAAM,GAAG,EAC7C,MACN,EACA,IAAK,IAAI,IACPA,EAAK;AAAQ,SAAS,CAAC,GAAG,MAAM,MAC5BA,EAAK,QAAQ,SAAS,CAAC,EAAE,KAAK,MAAM,MAAM,GAAG,EAC7C,MACN,EACA,IAAK,IAAI,IACPA,EAAK,QAAQ,SAAS,CAAC,GAAG,MAAM;AAC5BA,EAAK,QAAQ,SAAS,CAAC,EAAE,KAAK,MAAM,MAAM,GAAG,EAC7C,MACN,EACA,OAAQ,IAAI,IACVA,EAAK,QAAQ,SAAS,CAAC,GAAG,OAAO,MAC7BA,EAAK,QAAQ,SAAS,CAAC;AAAE,MAAM,MAAM,MAAM,GAAG,EAC9C,MACN,EACA,QAAS,IAAI,IACXA,EAAK,QAAQ,SAAS,CAAC,GAAG,QAAQ,MAC9BA,EAAK,QAAQ,SAAS,CAAC,EAAE,OAAO,MAAM;AAAM,GAAG,EAC/C,MACN,EACA,OAAQ,IAAI,IACVA,EAAK,QAAQ,SAAS,CAAC,GAAG,SAAS,MAC/BA,EAAK,QAAQ,SAAS,CAAC,EAAE,QAAQ,MAAM,MAAM,GAAG,EAChD,MACN,CACF,CACF,CACF,OAASqD,EAAO;AACd,eAAQ,KAAK,iBAAmBA,CAAK,EAC9B,CACL,kBAAmB,CAAC,EACpB,gBAAiB,CAAC,EAClB,OAAQ,CACN,IAAK,IAAI,IACT,IAAK,IAAI,IACT,IAAK,IAAI;AACT,OAAQ,IAAI,IACZ,QAAS,IAAI,IACb,OAAQ,IAAI,GACd,CACF,CACF,CACF,CAGA,CAAC,OAAO,aAAa,GAAyB,CAC5C,IAAIC,EAAgB,EACpB,MAAO,CACL,KAAM,IACJ,IAAI,QACF,CAACzD,EAASC,IAAW,CACnB,IAAMyD,EAAW,IAAM;AACrB,GAAI,KAAK,WAAW,OAAO,QACzBzD,EAAO,IAAI,MAAM,gCAAgC,CAAC,UACzCwD,EAAgB,KAAK,MAAM,OACpCzD,EAAQ,CAAE,MAAO;AAAK,MAAMyD,GAAe,CAAE,CAAC,UACrC,KAAK,WACdzD,EAAQ,CAAE,KAAM,GAAM,MAAO,EAAK,CAAC,MAC9B,CACL,IAAM2D,EAAW,IAAM,CACrB,KAAK,QAAQ,oBAAoB,UAAWA,CAAQ;AACpDD,EAAS,CACX,EACA,KAAK,QAAQ,iBAAiB,UAAWC,CAAQ,CACnD,CACF,EACAD,EAAS,CACX,CACF,CACJ,CACF,CACF,ECvzBO,SAASE,EAAYC,EAAyB,CACnD,IAAMC,EAAM,IAAI,IAAID,CAAK,EAEzB,OAAO,MAAM,KAAKC,CAAG,CACvB,CClBA,IAAMC,EAAS,IAAI,gBAAgB,SAAS,SAAS,MAAM,EACrDC,EAAyB,CAACD,EAAO,IAAI,UAAU,EAC/CE,EAAqBF,EAAO,IAAI,SAAS,EACzCG,EAA0BH,EAAO,IAAI;AAAA,KAAyB,EAC9DI,EAAeJ,EAAO,IAAI,QAAQ,GACtC,wCACIK,EAAOL,EAAO,IAAI,GAAG,GACzB;AAAA,WAEIM,EAAO,SAAS,eAAe,MAAM,EAS3C,IAAMC,EAAQ,CACZ,IACE;AAAA;AAAA;AAAA,yCACF,IACE;AAAA;AAAA;AAAA,iBACF,IACE;AAAA;AAAA;AAAA,yCACF,KACE;AAAA;AAAA;AAAA,qHACF,QACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAEF,QACE;AAAA;AAAA;AAAA,UACF,QACE;AAAA;AAAA;AAAA,sDAEF,KACE;AAAA;AAAA;AAEF,OACE;AAAA,qCACF,SACE;AAAA,4EAEF,KACE;AAAA,6GACF,KACE;AAAA;AAAA,qBACF,MAAO,sCACT,EAEMC,EAAY,SAAS,cAAc,KAAK,EAC9CC,EAAK;AAAsB,cAAeD,CAAS,EACnDA,EAAU,OAAO,wBAAwBE,CAAI,GAAG,EAChD,IAAMC,EAAW,SAAS,cAAc,UAAU,EAClDH,EAAU,OAAOG,CAAQ,EAEzB,IAAMC,EAAY;AAAY,IAAI,EAE5BC,EAAiB,IAAIC,EAAeC,CAAY,EAChDC,EAAY,IAAIC,EACpBJ,EACAH,EACAQ,EACAC,CACF,EAEMC,EAAN,cAA4B,WAAY,CACtC,YAAYC,EAAgBC,EAAoB,CAC9C,MAAM,EAEN,KAAK,UAAYf,EAAMe,CAAM,GAAKf,EAAM,QAExC,IAAMgB,EAAS;AAAS,cAAc,QAAQ,EAC9CA,EAAO,UAAU,IAAI,OAAQ,QAAQ,EACrCA,EAAO,UAAYhB,EAAM,OACzBgB,EAAO,iBAAiB,QAAS,IAAM,CACjC,KAAK;AAAU,OAAO,UAAU,EAClCA,EAAO,UAAYhB,EAAM,SAEzBgB,EAAO,UAAYhB,EAAM,MAE7B,CAAC,EAED,IAAMiB,EAAO,SAAS,cAAc,MAAM,EACtCH,EAAI,KAAMG,EAAK;AAAY,GAAKH,EAAI,MAEtCG,EAAK,UAAU,IAAI,SAAS,EAC5BA,EAAK,UAAY,WAEnB,KAAK,OAAOA,CAAI,EAEhB,IAAMC,EAAU,SAAS,cAAc,UAAU,EACjD;AAAK,OAAO,KAAMA,CAAO,EAEzB,IAAMC,EAAM,SAAS,cAAc,GAAG,EACtCA,EAAI,UAAU,IAAI,YAAa,KAAK,EACpCA,EAAI,KAAOL,EAAI,IACfK,EAAI,OAAS,SACbA,EAAI;AAAYL,EAAI,IAAI,QAAQ,iCAAkC,EAAE,EACpEK,EAAI,WAAanB,EAAM,KACvB,KAAK,OAAO,IAAKmB,CAAG,EAEpB,KAAK,OAAOH,CAAM,EAElB,IAAMI,EAAQ;AAAS,cAAc,KAAK,EAC1CA,EAAM,UAAU,IAAI,SAAU,SAAS,EACvC,KAAK,OAAOA,CAAK,EAEjBN,EAAI,QAAQ,KAAMO,GAAY,CAC5B,IAAMC,EAAW,SAAS;AAAc,MAAM,EACxCC,EAAQ,SAAS,cAAc,GAAG,EAexC,GAdAL,EAAQ,YAAYI,EAAU,IAAKC,CAAK,EAEpCF,EAAQ,SAAUC,EAAS,UAAYD,EAAQ,UAEjDC,EAAS,UAAU,IAAI;AAAA,IAAS,EAChCA,EAAS,UAAY,cAGnBD,EAAQ,MAAOE,EAAM,UAAY,SAAMF,EAAQ,MAAQ,UAEzDE,EAAM,UAAU,IAAI,SAAS,EAC7BA,EAAM,UAAY;AAAA,UAGhBF,EAAQ,OAAO,IAAI,KAAO,EAAG,CAC/B,IAAMG,EAAO,SAAS,cAAc,KAAK,EAEzCA,EAAK,UAAYxB,EAAM,KACvBwB,EAAK,WAAaxB,EAAM,KACpBe,IAAW,OAAkBA;AAAW,SAC1CS,EAAK,UAAU,IAAI,QAAQ,EAE7BJ,EAAM,OAAOI,CAAI,EAEjBH,EAAQ,OAAO,IAAI,QAASI,GAAM,CAChC,IAAMN,EAAM,SAAS,cAAc,GAAG,EACtCA,EAAI,UAAU;AAAI,QAAS,KAAK,EAChC,IAAMO,EAAQD,EAAE,QAAQ,qCAAsC,EAAE,EAChEN,EAAI,UAAYO,EAChBP,EAAI,KAAO,IAAMO,EACjBP,EAAI,MAAQ,YACZK;AAAK,OAAO,IAAKL,CAAG,EACpBV,EAAU,SAASgB,CAAC,EAAE,KAAME,GAAO,CACjCR,EAAI,UAAU,OAAO,KAAK,EACrBQ,EAAsB,UACzBR,EAAI,UAAYQ,EAAG,YAAc,IAC9BA,EAAsB,UACpBR,EAAI;AAAYQ,EAAG,WAC5B,EAAG,IAAM,CACPR,EAAI,gBAAgB,MAAM,CAC5B,CAAC,CACH,CAAC,CACH,CACA,GAAIE,EAAQ,OAAO,IAAI,KAAO,GAAKA,EAAQ,OAAO,QAAQ,KAAO,EAAG,CAClE,IAAMG,EAAO,SAAS;AAAc,KAAK,EAEzCA,EAAK,UAAYxB,EAAM,KACvBwB,EAAK,WAAaxB,EAAM,KACpBe,IAAW,OAAkBA,IAAW,SAC1CS,EAAK,UAAU,IAAI,QAAQ,EAE7BJ,EAAM,OAAOI,CAAI,EAEjBH,EAAQ,OAAO;AAAI,QAASI,GAAM,CAChC,IAAMN,EAAM,SAAS,cAAc,GAAG,EACtCA,EAAI,UAAU,IAAI,QAAS,KAAK,EAChC,IAAMO,EAAQD,EAAE,QAAQ;AAAA,UAAsC,EAAE,EAChEN,EAAI,UAAYO,EAChBP,EAAI,KAAO,IAAMO,EACjBP,EAAI,MAAQ,YACZK,EAAK,OAAO,IAAKL,CAAG,EACpBV,EAAU,SAASgB,CAAC,EAAE,KAAME,GAAO,CACjCR,EAAI,UAAU,OAAO;AAAA,IAAK,EACrBQ,EAAsB,UACzBR,EAAI,UAAYQ,EAAG,YAAc,IAC9BA,EAAsB,UACpBR,EAAI,UAAYQ,EAAG,WAC5B,EAAG,IAAM,CACPR,EAAI,gBAAgB,MAAM,CAC5B,CAAC,CACH,CAAC;AACDE,EAAQ,OAAO,QAAQ,QAASI,GAAM,CACpC,IAAMN,EAAM,SAAS,cAAc,GAAG,EACtCA,EAAI,UAAU,IAAI,QAAS,KAAK,EAChC,IAAMO,EAAQD,EAAE,QAAQ;AAAA,wBAAmC,EAAE,EAC7DN,EAAI,UAAYO,EAChBP,EAAI,KAAO,IAAMO,EACjBP,EAAI,MAAQ,YACZK,EAAK,OAAO,IAAKL,CAAG,EACpBV,EAAU,SAASgB,CAAC,EAAE,KAAME,GAAO,CACjCR,EAAI;AAAU,OAAO,KAAK,EACrBQ,EAAsB,UACzBR,EAAI,UAAYQ,EAAG,YAAc,IAC9BA,EAAsB,UACpBR,EAAI,UAAYQ,EAAG,WAC5B,EAAG,IAAM,CACPR,EAAI,gBAAgB;AAAA,IAAM,CAC5B,CAAC,CACH,CAAC,CACH,CACA,GAAIE,EAAQ,OAAO,IAAI,KAAO,EAAG,CAC/B,IAAMG,EAAO,SAAS,cAAc,KAAK,EAEzCA,EAAK,UAAYxB,EAAM,KACvBwB,EAAK,WAAaxB,EAAM,KACpBe,IAAW;AAAkBA,IAAW,SAC1CS,EAAK,UAAU,IAAI,QAAQ,EAE7BJ,EAAM,OAAOI,CAAI,EAEjBH,EAAQ,OAAO,IAAI,QAASI,GAAM,CAChC,IAAMN,EAAM,SAAS,cAAc,GAAG,EACtCA,EAAI;AAAU,IAAI,QAAS,KAAK,EAChC,IAAMO,EAAQD,EAAE,QAAQ,qCAAsC,EAAE,EAChEN,EAAI,UAAYO,EAChBP,EAAI,KAAO,IAAMO,EACjBP,EAAI,MAAQ;AAAA,GACZK,EAAK,OAAO,IAAKL,CAAG,EACpBV,EAAU,SAASgB,CAAC,EAAE,KAAME,GAAO,CACjCR,EAAI,UAAU,OAAO,KAAK,EACrBQ,EAAsB,UACzBR,EAAI,UAAYQ,EAAG,YAAc,IAC9BA,EAAsB;AACpBR,EAAI,UAAYQ,EAAG,WAC5B,EAAG,IAAM,CACPR,EAAI,gBAAgB,MAAM,CAC5B,CAAC,CACH,CAAC,CACH,CACA,GAAIE,EAAQ,OAAO,OAAO,KAAO,GAAKA,EAAQ,OAAO,OAAO,KAAO,EAAG,CACpE,IAAMG,EAAO;AAAS,cAAc,KAAK,EACzCA,EAAK,UAAYxB,EAAM,MAAQA,EAAM,KAErCwB,EAAK,UAAU,IAAI,QAAQ,EAE3BJ,EAAM,OAAOI,CAAI,EAEjBH,EAAQ,OAAO,OAAO,QAASI,GAAM,CACnC,IAAMN,EAAM;AAAS,cAAc,GAAG,EACtCA,EAAI,UAAU,IAAI,QAAS,KAAK,EAChC,IAAMO,EAAQD,EAAE,QAAQ,qCAAsC,EAAE,EAChEN,EAAI,UAAYO;AAChBP,EAAI,KAAO,IAAMO,EACjBP,EAAI,MAAQ,YACZK,EAAK,OAAO,IAAKL,CAAG,EACpBV,EAAU,SAASgB,CAAC,EAAE,KAAME,GAAO,CACjCR,EAAI,UAAU,OAAO,KAAK,EACrBQ,EAAsB,UACzBR,EAAI;AAAYQ,EAAG,YAAc,IAC9BA,EAAsB,UACpBR,EAAI,UAAYQ,EAAG,WAC5B,EAAG,IAAM,CACPR,EAAI,gBAAgB,MAAM,CAC5B,CAAC,CACH,CAAC,EACDE,EAAQ,OAAO,OAAO,QAASI,GAAM;AACnC,IAAMN,EAAM,SAAS,cAAc,GAAG,EACtCA,EAAI,UAAU,IAAI,QAAS,KAAK,EAChC,IAAMO,EAAQD,EAAE,QAAQ,kCAAmC,EAAE,EAC7DN;AAAI,UAAYO,EAChBP,EAAI,KAAO,IAAMO,EACjBP,EAAI,MAAQ,YACZK,EAAK,OAAO,IAAKL,CAAG,EACpBV,EAAU,SAASgB,CAAC,EAAE,KAAME,GAAO,CACjCR,EAAI,UAAU,OAAO,KAAK,EACrBQ,EAAsB;AACzBR,EAAI,UAAYQ,EAAG,YAAc,IAC9BA,EAAsB,UACpBR,EAAI,UAAYQ,EAAG,WAC5B,EAAG,IAAM,CACPR,EAAI,gBAAgB,MAAM,CAC5B,CAAC,CACH,CAAC,CACH,CACA,GAAIE,EAAQ;AAAgB,OAAS,EAAG,CACtC,IAAMG,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAU,IAAI,UAAW,QAAQ,EACtCJ,EAAM,OAAOI,CAAI,EACjB,QAAWI,KAAUP,EAAQ,gBAAiB;AAC5C,IAAMQ,EAAK,SAAS,cAAc,QAAQ,EAC1CL,EAAK,OAAOK,CAAE,EACd,IAAMC,EAAM,SAAS,cAAc,KAAK,EACxCA,EAAI,IAAMF,EAAO,IACjBE,EAAI,QAAU,OACdA,EAAI;AAAMF,EAAO,aAAe,+BAChCC,EAAG,OAAOC,CAAG,EACb,IAAMC,EAAU,SAAS,cAAc,YAAY,EACnDA,EAAQ,UAAYH,EAAO;AAAe,GAC1CC,EAAG,OAAOE,CAAO,CACnB,CACF,CACA,GAAIV,EAAQ,kBAAkB,OAAS,EAAG,CACxC,IAAMG,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAYxB,EAAM,MAAQA,EAAM,KACnC;AAAA,qBACFwB,EAAK,UAAU,IAAI,QAAQ,EAC3BJ,EAAM,OAAOI,CAAI,EACjBA,EAAK,WAAaH,EAAQ,kBAAkB,IAAKW,GAC/C,KAAK,UAAUA,CAAC,EACb;AAAW,IAAK,EAAE,EAClB,WAAW,IAAK,EAAE,EAClB,WAAW,KAAM,IAAI,EACrB,WAAW,IAAK,IAAI,EACpB,WAAW,IAAK,EAAE,CACvB,EAAE,KAAK;AAAA,GAAM,CACf,CACF,CAAC,CACH,CACF,EACA,eAAe,OAAO,iBAAkBnB,CAAa,EAErD,IAAMoB,EAAN,cAAuB,WAAY,CACjC,YAAYC,EAAY,CACtB,MAAM,EAEN,IAAMX,EAAQ;AAAS,cAAc,IAAI,EACnCY,EAAa,SAAS,cAAc,GAAG,EAC7CA,EAAW,UAAYD,EAAK,YAC5BX,EAAM,OAAOY,CAAU,EACvB,KAAK,OAAOZ,CAAK,EAEjB,IAAMa,EAAa,SAAS;AAAc,MAAM,EAChDA,EAAW,UAAU,IAAI,MAAM,EAC/BA,EAAW,UAAYF,EAAK,KAC5B,IAAMG,EAAgB,SAAS,cAAc,MAAM,EAKnD,GAJAA,EAAc,UAAU,IAAI,MAAM,EAClCA,EAAc;AAAYH,EAAK,SAAW,kBAC1CX,EAAM,OAAO,IAAKc,EAAe,IAAKD,CAAU,EAE5CF,EAAK,aAAc,CACrB,IAAMI,EAAW,SAAS,cAAc,GAAG,EAC3CA,EAAS,UAAU,IAAI;AAAA,KAAS,KAAK,EACrC,IAAMZ,EAAQQ,EAAK,aAAa,QAC9B,kCACA,EACF,EACAI,EAAS,UAAYZ,EACrBY,EAAS,GAAKZ,EACdY,EAAS,KAAOJ,EAAK;AACrBI,EAAS,OAAS,SAClBA,EAAS,WAAatC,EAAM,KAC5BuB,EAAM,OAAO,IAAKe,CAAQ,CAC5B,CAEA,IAAMC,EAAa,SAAS,cAAc,KAAK,EAC/CA,EAAW,UAAU,IAAI,YAAY;AACrCL,EAAK,gBAAgB,KAAMd,GAAU,CAC/BA,EAAM,KAAO,IACfmB,EAAW,UAAY,SACrBC,EAAS,CAAC,GAAGpB,EAAM,OAAO,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,gBAAM,EAAI,SAE1D,CAAC;AACD,KAAK,OAAOmB,CAAU,EAEtB,IAAME,EAAa,SAAS,cAAc,IAAI,EAG9C,GAFA,KAAK,OAAOA,CAAU,EAElBP,EAAK,OAAQ,CACf,IAAMQ,EAAU,SAAS,cAAc,GAAG,EAC1CA,EAAQ;AAAU,IAAI,MAAO,KAAK,EAClC,IAAMC,EAAKT,EAAK,OAAO,QACrB,8CACA,EACF,EACAQ,EAAQ,UAAYC,EACpBD,EAAQ,GAAKC,EACbD,EAAQ,KAAOR;AAAK,OACpBQ,EAAQ,OAAS,SACjBA,EAAQ,WAAa1C,EAAM,KAC3BuB,EAAM,OAAO,IAAKmB,CAAO,EAEzB,IAAME,EAAK,SAAS,cAAc,KAAK,EACvCA,EAAG,UAAU,IAAI;AAAA,QAAe,EAChCA,EAAG,UAAYV,EAAK,iBAAmBA,EAAK,OACxClC,EAAM,QACNA,EAAM,QACVyC,EAAW,OAAOG,CAAE,EAEpB,IAAMtB,EAAW,SAAS,cAAc,MAAM,EAC9CA;AAAS,UAAY,oBACrBsB,EAAG,OAAOtB,CAAQ,EAElB,IAAMF,EAAQ,SAAS,cAAc,KAAK,EAI1C,GAHAA,EAAM,UAAU,IAAI,QAAQ,EAC5BwB,EAAG,OAAOxB,CAAK,EAEXc;AAAK,iBAAmBA,EAAK,OAAQ,CACvC,IAAMV,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAYxB,EAAM,KAAOA,EAAM,QACpCoB,EAAM,OAAOI,CAAI,EAEjB,IAAMkB,EAAU,SAAS;AAAc,GAAG,EAC1CA,EAAQ,UAAU,IAAI,MAAO,KAAK,EAClC,IAAMC,EAAKT,EAAK,eAAgB,QAC9B,8CACA,EACF,EACAQ,EAAQ;AAAYC,EACpBD,EAAQ,KAAO,IAAIC,CAAE,GACrBD,EAAQ,MAAQ,YAChBlB,EAAK,OAAOkB,CAAO,EACnBjC,EAAU,SAASyB,EAAK,cAAe,EAAE,KAAMT,GAAM,CAC9CA,EAAqB,UACxBiB,EAAQ,UAAYjB,EAAE;AAAc,IACjCA,EAAqB,UACnBiB,EAAQ,UAAYjB,EAAE,WAC/B,EAAG,IAAM,CACPiB,EAAQ,gBAAgB,MAAM,CAChC,CAAC,CACH,CACF,CACA,GAAIR,EAAK,WAAW,OAAO,KAAO,GAAKA,EAAK;AAAW,KAAK,KAAO,EAAG,CACpE,QAAWpB,KAAOoB,EAAK,WAAW,OAAQ,CACxC,IAAMU,EAAK,IAAI/B,EAAcC,EAAK,KAAc,EAChD2B,EAAW,OAAOG,CAAE,CACtB,CACA,QAAW9B,KAAOoB,EAAK,WAAW,KAAM,CACtC,IAAMU,EAAK,IAAI/B;AAAcC,EAAK,MAAe,EACjD2B,EAAW,OAAOG,CAAE,CACtB,CACF,CAEA,IAAMC,EAAgB,SAAS,cAAc,MAAM,EACnDA,EAAc,UAAU,IAAI,eAAe,EAC3CA,EAAc,UAAY,OAC1BC,EAAQZ,CAAI,EAAE;AAAMa,GAASF,EAAc,MAAQ,QAAQE,CAAI,EAAE,EACjExB,EAAM,OAAO,IAAKsB,CAAa,EAE/B,QAAWG,KAAkBd,EAAK,gBAAiB,CACjD,IAAMe,EAAW,SAAS,cAAc,IAAI,EACtCd,EAAa,SAAS;AAAc,GAAG,EAC7CA,EAAW,UAAYa,EAAe,YACtCb,EAAW,UAAU,IAAI,MAAM,EAC/Bc,EAAS,OAAOd,CAAU,EAC1Bc,EAAS,OAAO,IAAKD,EAAe,SAAS,EAC7C,KAAK,OAAOC,CAAQ,EAEpB,IAAMR,EAAa;AAAS,cAAc,IAAI,EAG9C,GAFA,KAAK,OAAOA,CAAU,EAElBO,EAAe,gBAAiB,CAClC,IAAMV,EAAW,SAAS,cAAc,GAAG,EAC3CA,EAAS,UAAU,IAAI,QAAS,KAAK;AACrC,IAAMZ,EAAQsB,EAAe,gBAAgB,QAC3C,qCACA,EACF,EACAV,EAAS,UAAYZ,EACrBY,EAAS,GAAKZ,EACdY,EAAS,KAAOU,EAAe,gBAC/BV;AAAS,OAAS,SAClBA,EAAS,WAAatC,EAAM,KAC5BiD,EAAS,OAAO,IAAKX,CAAQ,CAC/B,CACA,GAAIU,EAAe,OAAQ,CACzB,IAAMN,EAAU,SAAS,cAAc,GAAG,EAC1CA,EAAQ,UAAU,IAAI;AAAO,KAAK,EAClC,IAAMC,EAAKK,EAAe,OAAO,QAC/B,8CACA,EACF,EACAN,EAAQ,UAAYC,EACpBD,EAAQ,GAAKC,EACbD,EAAQ,KAAOM,EAAe,OAC9BN,EAAQ;AAAS,SACjBA,EAAQ,WAAa1C,EAAM,KAC3BiD,EAAS,OAAO,IAAKP,CAAO,EAE5B,IAAME,EAAK,SAAS,cAAc,KAAK,EACvCA,EAAG,UAAU,IAAI,eAAe,EAChCA,EAAG;AAAYI,EAAe,iBAAmBA,EAAe,OAC5DhD,EAAM,QACNA,EAAM,QACVyC,EAAW,OAAOG,CAAE,EAEpB,IAAMtB,EAAW,SAAS,cAAc,MAAM,EAC9CA,EAAS,UAAY;AAAA,SACrBsB,EAAG,OAAOtB,CAAQ,EAElB,IAAMF,EAAQ,SAAS,cAAc,KAAK,EAI1C,GAHAA,EAAM,UAAU,IAAI,QAAQ,EAC5BwB,EAAG,OAAOxB,CAAK,EAEX4B,EAAe,iBAAmBA,EAAe,OAAQ;AAC3D,IAAMxB,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAYxB,EAAM,KAAOA,EAAM,QACpCoB,EAAM,OAAOI,CAAI,EAEjB,IAAMkB,EAAU,SAAS,cAAc,GAAG,EAC1CA,EAAQ;AAAU,IAAI,MAAO,KAAK,EAClC,IAAMC,EAAKK,EAAe,eAAgB,QACxC,8CACA,EACF,EACAN,EAAQ,UAAYC,EACpBD,EAAQ,KAAO;AAAA,GAAIC,CAAE,GACrBD,EAAQ,MAAQ,YAChBlB,EAAK,OAAO,IAAKkB,CAAO,EACxBjC,EAAU,SAASuC,EAAe,cAAe,EAAE,KAAMvB,GAAM,CAC7DiB,EAAQ,UAAU,OAAO,KAAK,EACzBjB,EAAqB,UACxBiB;AAAQ,UAAYjB,EAAE,YAAc,IACjCA,EAAqB,UACnBiB,EAAQ,UAAYjB,EAAE,WAC/B,EAAG,IAAM,CACPiB,EAAQ,gBAAgB,MAAM,CAChC,CAAC,CACH,CACF,CAEA,IAAMQ,EAA6D,CAAC,EAEpE,QAAWpC,KAAOkC;AAAe,WAAW,IAC1CE,EAAiB,KAAK,CAAE,IAAApC,EAAK,OAAQ,KAAe,CAAC,EAEvD,QAAWA,KAAOkC,EAAe,WAAW,IAC1CE,EAAiB,KAAK,CAAE,IAAApC,EAAK,OAAQ,KAAe,CAAC,EAEvD,QAAWA,KAAOkC,EAAe;AAAW,IAC1CE,EAAiB,KAAK,CAAE,IAAApC,EAAK,OAAQ,KAAe,CAAC,EAEvD,QAAWA,KAAOkC,EAAe,WAAW,KAC1CE,EAAiB,KAAK,CAAE,IAAApC,EAAK,OAAQ,MAAgB,CAAC,EAGnDqC,GACHD,EAAiB,KAAK,CAACE,EAAGC,IACpBD,EAAE,IAAI;AAAQC,EAAE,IAAI,KAAaD,EAAE,IAAI,KAAOC,EAAE,IAAI,KACpDD,EAAE,IAAI,KAAa,EACnBC,EAAE,IAAI,KAAa,GAChB,CACR,EAGH,OAAW,CAAE,IAAAvC,EAAK,OAAAC,CAAO,IAAKmC,EAAkB,CAC9C,IAAMN,EAAK,IAAI/B,EAAcC,EAAKC,CAAM,EACxC0B,EAAW,OAAOG,CAAE,CACtB,CACF,CACF,CACF;AACA,eAAe,OAAO,YAAaX,CAAQ,EAE3C,eAAea,EAAQZ,EAA6B,CAClD,GAAIA,EAAK,cAAc,WACrB,OAAIA,EAAK,cAAc,SACd;AAAA,oCACK,sBACT,GAAIA,EAAK,cAAc,UAAW,CACvC,IAAMb,EAAU,MAAMa,EAAK,cAAc;AAAU,QAC7CoB,EAAS,MAAMR,EAAQZ,EAAK,cAAc,MAAM,EACtD,MAAO,oBAAoBb,EAAQ,QAAQ,IAAIa,EAAK,cAAc,UAAU,IAAI;AAAA,oBAAwBA,EAAK,cAAc,OAAO,WAAW,UAAUoB,CAAM,EAE/J,KAAO,CACL,IAAMA,EAAS,MAAMR,EAAQZ,EAAK,cAAc,MAAM,EACtD,MAAO;AAAA;AAAA,oBAA8DA,EAAK,cAAc,OAAO,WAAW,UAAUoB,CAAM,EAC5H,CACF,CAEA,cAAiBpB,KAAQzB,EAAW,CAClC,IAAM8C,EAAU,IAAItB,EAASC,CAAI,EACjChC,EAAK,OAAOqD,CAAO,CACrB,CAEA,IAAMC,EAAU;AAAY,IAAI,EAEhCvD,EAAU,UAAY,GACtBA,EAAU,UACR,SAASQ,EAAU,MAAM,MAAM,eAAeA,EAAU,WAAW,IAAI,2BACpE+C,EAAUnD;AAAa,GAC1B,YACEI,EAAU,MAAM,SAAW,GAAGP,EAAK,OAAO,IAAI",
  "names": ["sleep", "ms", "resolve", "SparqlEndpoint", "sparqlEnpointUri", "query", "fetchOptions", "_reason", "retryCount", "sendRequest", "response", "error", "wait", "preamble", "postamble", "getNameFromCol", "colUri", "getNameFromTC", "tcUri", "getNameFromTN", "tnUri", "unifyAuthorithy", "a", "b", "as", "bs", "yearA", "yearB", "etalA", "etalB", "result", "i", "r", "unifySingleName", "j", "prefixA", "prefixB", "longA", "longB", "indexA", "indexB", "index", "isEquivalent", "normA", "normB", "SynonymGroup", "name", "sparqlEndpoint", "taxonName", "ignoreDeprecatedCoL", "startWithSubTaxa", "e", "n", "uri", "an", "resolve", "reject", "justification", "json", "getNameFromCol", "getNameFromTC", "getNameFromTN", "url", "query", "names", "genus", "species", "infrasp", "treatmentPromises", "abbreviateRank", "rank", "displayName", "unathorizedCol", "authorizedNames", "taxonNameURI", "expandedHere", "t", "colURI", "def", "aug", "dpr", "cite", "prevName", "unifyAuthorithy", "best", "treats", "authName", "tc", "colPromises", "acceptedColURI", "promises", "newSynonyms", "treat", "d", "s", "treatment", "colUri", "parent", "b", "result", "bindings", "urls", "url_d", "date", "details", "treatmentUri", "materialCitations", "httpUri", "figureQuery", "figureCitations", "f", "error", "returnedSoFar", "callback", "listener", "distinct", "array", "set", "params", "HIDE_COL_ONLY_SYNONYMS", "START_WITH_SUBTAXA", "SORT_TREATMENTS_BY_TYPE", "ENDPOINT_URL", "NAME", "root", "icons", "indicator", "root", "NAME", "progress", "timeStart", "sparqlEndpoint", "SparqlEndpoint", "ENDPOINT_URL", "synoGroup", "SynonymGroup", "HIDE_COL_ONLY_SYNONYMS", "START_WITH_SUBTAXA", "SynoTreatment", "trt", "status", "button", "date", "spinner", "url", "names", "details", "creators", "title", "line", "n", "short", "nn", "figure", "el", "img", "caption", "c", "SynoName", "name", "name_title", "rank_badge", "kingdom_badge", "name_uri", "vernacular", "distinct", "treatments", "col_uri", "id", "li", "justification", "justify", "just", "authorizedName", "authName", "treatments_array", "SORT_TREATMENTS_BY_TYPE", "a", "b", "parent", "element", "timeEnd"]
}
